2023-06-26 13:54:52.741 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 13:54:55.063 +05:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:54:55.225 +05:00 [INF] Executed DbCommand (120ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 13:54:55.253 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:54:55.268 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 13:54:55.277 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:54:55.282 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 13:54:55.403 +05:00 [INF] Executed DbCommand (72ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 13:54:55.765 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 13:54:56.400 +05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Departments] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 13:54:56.566 +05:00 [INF] Executed DbCommand (149ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Employees] AS [e]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 13:54:56.623 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 13:54:57.704 +05:00 [INF] User profile is available. Using 'C:\Users\Ali Hamza\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-06-26 13:54:58.260 +05:00 [INF] Now listening on: https://localhost:7149
2023-06-26 13:54:58.266 +05:00 [INF] Now listening on: http://localhost:5247
2023-06-26 13:54:58.279 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-06-26 13:54:58.285 +05:00 [INF] Hosting environment: Development
2023-06-26 13:54:58.293 +05:00 [INF] Content root path: C:\Users\Ali Hamza\source\repos\ClassLibrary2\Web Api
2023-06-26 13:55:02.463 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:55:07.626 +05:00 [INF] No SPA development server running at https://localhost:44492 found.
2023-06-26 13:55:08.447 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:55:08.545 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 6087.0863ms
2023-06-26 13:55:08.944 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/favicon.ico - -
2023-06-26 13:55:10.650 +05:00 [INF] The file /favicon.ico was not modified
2023-06-26 13:55:10.657 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/favicon.ico - - - 304 - image/x-icon 1712.4069ms
2023-06-26 13:55:11.834 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:55:16.614 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:55:16.624 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4790.2780ms
2023-06-26 13:55:19.686 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:55:24.381 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:55:24.384 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4698.2397ms
2023-06-26 13:55:27.496 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:55:32.032 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:55:32.035 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4538.1534ms
2023-06-26 13:55:35.143 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:55:39.264 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:55:39.269 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4126.1274ms
2023-06-26 13:55:42.365 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:55:46.829 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:55:46.832 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4467.0799ms
2023-06-26 13:55:49.945 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:55:54.659 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:55:54.661 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4716.2034ms
2023-06-26 13:55:57.761 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:56:02.375 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:56:02.377 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4615.2521ms
2023-06-26 13:56:05.450 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:56:09.596 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:56:09.598 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4147.9848ms
2023-06-26 13:56:12.695 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:56:17.138 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:56:17.140 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4445.3745ms
2023-06-26 13:56:20.213 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:56:24.546 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:56:24.559 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4346.1481ms
2023-06-26 13:56:27.650 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:56:32.017 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:56:32.020 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4369.3471ms
2023-06-26 13:56:35.099 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:56:39.606 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:56:39.612 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4513.1049ms
2023-06-26 13:56:42.725 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:56:47.566 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:56:47.568 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4842.7550ms
2023-06-26 13:56:50.711 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:56:55.589 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:56:55.598 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4885.7010ms
2023-06-26 13:56:58.720 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:57:08.797 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:57:08.800 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 10079.7835ms
2023-06-26 13:57:10.041 +05:00 [ERR] Unable to connect to the SPA development server at 'https://localhost:44492'.
2023-06-26 13:57:11.891 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:57:21.964 +05:00 [INF] No SPA development server running at https://localhost:44492 found.
2023-06-26 13:57:22.284 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:57:22.306 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 10415.5911ms
2023-06-26 13:57:25.472 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:57:37.695 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 13:57:37.817 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 12345.0070ms
2023-06-26 13:57:37.816 +05:00 [INF] SPA development server running at 'https://localhost:44492'
2023-06-26 13:57:40.922 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 13:57:41.048 +05:00 [INF] SPA proxy is ready. Redirecting to https://localhost:44492.
2023-06-26 13:57:41.057 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 302 0 - 134.2792ms
2023-06-26 13:57:51.525 +05:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7149/api/Auth/Login - -
2023-06-26 13:57:51.536 +05:00 [INF] CORS policy execution successful.
2023-06-26 13:57:51.543 +05:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7149/api/Auth/Login - - - 204 - - 17.5263ms
2023-06-26 13:57:51.548 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7149/api/Auth/Login application/json 58
2023-06-26 13:57:51.556 +05:00 [INF] CORS policy execution successful.
2023-06-26 13:57:52.590 +05:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '6/24/2023 1:58:36 PM', Current time: '6/26/2023 8:57:52 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2023-06-26 13:57:53.105 +05:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '6/24/2023 1:58:36 PM', Current time: '6/26/2023 8:57:52 AM'.
2023-06-26 13:57:53.247 +05:00 [INF] Executing endpoint 'Web_Api.Controllers.AuthController.GetUser (Web Api)'
2023-06-26 13:57:53.341 +05:00 [INF] Route matched with {action = "GetUser", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUser(Web_Api.Models.UserModel) on controller Web_Api.Controllers.AuthController (Web Api).
2023-06-26 13:57:53.396 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 13:57:53.444 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:53.581 +05:00 [INF] Executed DbCommand (115ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 13:57:53.593 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:53.606 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 13:57:53.612 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:53.622 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 13:57:53.656 +05:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 13:57:53.672 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 13:57:54.177 +05:00 [INF] Executed DbCommand (48ms) [Parameters=[@__user_UserName_0='?' (Size = 4000), @__user_PassWord_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE ([u].[UserName] = @__user_UserName_0) AND ([u].[Password] = @__user_PassWord_1)
2023-06-26 13:57:54.359 +05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-06-26 13:57:54.394 +05:00 [INF] Executed action Web_Api.Controllers.AuthController.GetUser (Web Api) in 1038.0095ms
2023-06-26 13:57:54.398 +05:00 [INF] Executed endpoint 'Web_Api.Controllers.AuthController.GetUser (Web Api)'
2023-06-26 13:57:54.406 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7149/api/Auth/Login application/json 58 - 200 - application/json;+charset=utf-8 2857.9860ms
2023-06-26 13:57:56.463 +05:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7149/api/Employee - -
2023-06-26 13:57:56.478 +05:00 [INF] CORS policy execution successful.
2023-06-26 13:57:56.481 +05:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7149/api/Employee - - - 204 - - 18.0615ms
2023-06-26 13:57:56.492 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7149/api/Employee application/json 905
2023-06-26 13:57:56.509 +05:00 [INF] CORS policy execution successful.
2023-06-26 13:57:56.562 +05:00 [INF] Executing endpoint 'Web_Api.Controllers.EmployeeController.GetEmployee (Web Api)'
2023-06-26 13:57:56.572 +05:00 [INF] Route matched with {action = "GetEmployee", controller = "Employee"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetEmployee(Web_Api.Models.DataTablesParameters) on controller Web_Api.Controllers.EmployeeController (Web Api).
2023-06-26 13:57:56.729 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 13:57:56.755 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:56.797 +05:00 [INF] Executed DbCommand (37ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 13:57:56.813 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:56.822 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 13:57:56.833 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:56.850 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 13:57:56.882 +05:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 13:57:56.898 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 13:57:57.006 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Employees] AS [e]
2023-06-26 13:57:57.049 +05:00 [INF] Executed DbCommand (18ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [e].[ID], [e].[Age], [e].[CNIC.no], [e].[DepId], [e].[Manager], [e].[Employee Name], [e].[Salary]
FROM [Employees] AS [e]
ORDER BY [e].[Employee Name]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-06-26 13:57:57.106 +05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Web_Api.Models.EmployeeModel, Web Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-06-26 13:57:57.146 +05:00 [INF] Executed action Web_Api.Controllers.EmployeeController.GetEmployee (Web Api) in 569.0322ms
2023-06-26 13:57:57.158 +05:00 [INF] Executed endpoint 'Web_Api.Controllers.EmployeeController.GetEmployee (Web Api)'
2023-06-26 13:57:57.161 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7149/api/Employee application/json 905 - 200 - application/json;+charset=utf-8 669.0735ms
2023-06-26 13:57:59.107 +05:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7149/api/Department - -
2023-06-26 13:57:59.109 +05:00 [INF] CORS policy execution successful.
2023-06-26 13:57:59.112 +05:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7149/api/Department - - - 204 - - 4.6061ms
2023-06-26 13:57:59.117 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7149/api/Department application/json 614
2023-06-26 13:57:59.122 +05:00 [INF] CORS policy execution successful.
2023-06-26 13:57:59.131 +05:00 [INF] Executing endpoint 'Web_Api.Controllers.DepartmentController.PostDepartment (Web Api)'
2023-06-26 13:57:59.139 +05:00 [INF] Route matched with {action = "PostDepartment", controller = "Department"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult PostDepartment(Web_Api.Models.DataTablesParameters) on controller Web_Api.Controllers.DepartmentController (Web Api).
2023-06-26 13:57:59.146 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 13:57:59.157 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:59.203 +05:00 [INF] Executed DbCommand (40ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 13:57:59.212 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:59.223 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 13:57:59.228 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 13:57:59.240 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 13:57:59.254 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 13:57:59.262 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 13:57:59.285 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Departments] AS [d]
2023-06-26 13:57:59.301 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [d].[Department ID], [d].[Head Name], [d].[Department Location ], [d].[Department Name]
FROM [Departments] AS [d]
ORDER BY [d].[Department Name]
OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
2023-06-26 13:57:59.346 +05:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType1`4[[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Int32, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.List`1[[Web_Api.Models.DepartmentModel, Web Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2023-06-26 13:57:59.359 +05:00 [INF] Executed action Web_Api.Controllers.DepartmentController.PostDepartment (Web Api) in 213.6263ms
2023-06-26 13:57:59.361 +05:00 [INF] Executed endpoint 'Web_Api.Controllers.DepartmentController.PostDepartment (Web Api)'
2023-06-26 13:57:59.364 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7149/api/Department application/json 614 - 200 - application/json;+charset=utf-8 247.7422ms
2023-06-26 16:41:20.479 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 16:41:20.970 +05:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 16:41:21.071 +05:00 [INF] Executed DbCommand (86ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 16:41:21.078 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 16:41:21.084 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 16:41:21.086 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 16:41:21.087 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 16:41:21.112 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 16:41:21.136 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 16:41:21.494 +05:00 [INF] Executed DbCommand (77ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Departments] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 16:41:21.594 +05:00 [INF] Executed DbCommand (89ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Employees] AS [e]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 16:41:21.812 +05:00 [INF] Executed DbCommand (112ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:32:33.197 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 18:32:33.717 +05:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:32:33.861 +05:00 [INF] Executed DbCommand (124ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 18:32:33.870 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:32:33.878 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 18:32:33.880 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:32:33.882 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 18:32:33.925 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 18:32:33.955 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 18:32:34.225 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Departments] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:32:34.236 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Employees] AS [e]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:32:34.244 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:33:39.139 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 18:33:39.667 +05:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:33:39.747 +05:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 18:33:39.759 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:33:39.767 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 18:33:39.772 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:33:39.774 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 18:33:39.813 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 18:33:39.843 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 18:33:40.165 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Departments] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:33:40.181 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Employees] AS [e]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:33:40.193 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:50:55.956 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 18:50:57.170 +05:00 [INF] Executed DbCommand (43ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:50:57.411 +05:00 [INF] Executed DbCommand (203ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 18:50:57.423 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:50:57.435 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 18:50:57.441 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 18:50:57.446 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 18:50:57.587 +05:00 [INF] Executed DbCommand (101ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 18:50:57.849 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 18:50:58.246 +05:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Departments] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:50:58.278 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Employees] AS [e]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:50:58.291 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 18:50:59.053 +05:00 [INF] User profile is available. Using 'C:\Users\Ali Hamza\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-06-26 18:50:59.662 +05:00 [INF] Now listening on: https://localhost:7149
2023-06-26 18:50:59.667 +05:00 [INF] Now listening on: http://localhost:5247
2023-06-26 18:50:59.678 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-06-26 18:50:59.684 +05:00 [INF] Hosting environment: Development
2023-06-26 18:50:59.690 +05:00 [INF] Content root path: C:\Users\Ali Hamza\source\repos\ClassLibrary2\Web Api
2023-06-26 18:51:02.010 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 18:51:06.701 +05:00 [INF] No SPA development server running at https://localhost:44492 found.
2023-06-26 18:51:07.169 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 18:51:07.332 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 5338.2648ms
2023-06-26 18:51:10.673 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 18:51:14.816 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 18:51:14.823 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4150.7241ms
2023-06-26 18:51:17.903 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 18:51:22.007 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 18:51:22.014 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4111.3273ms
2023-06-26 18:51:25.144 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 18:51:29.283 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 18:51:29.289 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 4145.0594ms
2023-06-26 18:51:32.405 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 18:51:42.528 +05:00 [INF] SPA proxy is not ready. Returning temporary landing page.
2023-06-26 18:51:42.555 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 200 - text/html 10149.9181ms
2023-06-26 18:51:45.639 +05:00 [INF] Request starting HTTP/2 GET https://localhost:7149/ - -
2023-06-26 18:51:49.399 +05:00 [INF] SPA development server running at 'https://localhost:44492'
2023-06-26 18:51:49.703 +05:00 [INF] SPA proxy is ready. Redirecting to https://localhost:44492.
2023-06-26 18:51:49.712 +05:00 [INF] Request finished HTTP/2 GET https://localhost:7149/ - - - 302 0 - 4072.5275ms
2023-06-26 19:00:07.895 +05:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7149/api/Auth/Login - -
2023-06-26 19:00:08.189 +05:00 [INF] CORS policy execution successful.
2023-06-26 19:00:08.206 +05:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7149/api/Auth/Login - - - 204 - - 315.4328ms
2023-06-26 19:00:08.241 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7149/api/Auth/Login application/json 62
2023-06-26 19:00:08.268 +05:00 [INF] CORS policy execution successful.
2023-06-26 19:00:09.355 +05:00 [INF] Executing endpoint 'Web_Api.Controllers.AuthController.GetUser (Web Api)'
2023-06-26 19:00:09.450 +05:00 [INF] Route matched with {action = "GetUser", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUser(Web_Api.Models.UserModel) on controller Web_Api.Controllers.AuthController (Web Api).
2023-06-26 19:00:09.513 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 19:00:09.557 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 19:00:09.694 +05:00 [INF] Executed DbCommand (130ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 19:00:09.703 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 19:00:09.715 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 19:00:09.720 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 19:00:09.725 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 19:00:09.759 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 19:00:09.767 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 19:00:10.281 +05:00 [INF] Executed DbCommand (50ms) [Parameters=[@__user_UserName_0='?' (Size = 4000), @__user_PassWord_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE ([u].[UserName] = @__user_UserName_0) AND ([u].[Password] = @__user_PassWord_1)
2023-06-26 19:00:10.306 +05:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2023-06-26 19:00:10.324 +05:00 [INF] Executed action Web_Api.Controllers.AuthController.GetUser (Web Api) in 861.8041ms
2023-06-26 19:00:10.330 +05:00 [INF] Executed endpoint 'Web_Api.Controllers.AuthController.GetUser (Web Api)'
2023-06-26 19:00:10.344 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7149/api/Auth/Login application/json 62 - 400 - text/plain;+charset=utf-8 2102.1789ms
2023-06-26 19:00:41.987 +05:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:7149/api/Auth/Login - -
2023-06-26 19:00:41.995 +05:00 [INF] CORS policy execution successful.
2023-06-26 19:00:41.997 +05:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:7149/api/Auth/Login - - - 204 - - 9.5490ms
2023-06-26 19:00:42.004 +05:00 [INF] Request starting HTTP/2 POST https://localhost:7149/api/Auth/Login application/json 62
2023-06-26 19:00:42.006 +05:00 [INF] CORS policy execution successful.
2023-06-26 19:00:42.021 +05:00 [INF] Executing endpoint 'Web_Api.Controllers.AuthController.GetUser (Web Api)'
2023-06-26 19:00:42.026 +05:00 [INF] Route matched with {action = "GetUser", controller = "Auth"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetUser(Web_Api.Models.UserModel) on controller Web_Api.Controllers.AuthController (Web Api).
2023-06-26 19:00:42.115 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 19:00:42.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 19:00:42.169 +05:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 19:00:42.184 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 19:00:42.190 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 19:00:42.196 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 19:00:42.201 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 19:00:42.215 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 19:00:42.221 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 19:00:42.241 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__user_UserName_0='?' (Size = 4000), @__user_PassWord_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[Password], [u].[UserName]
FROM [Users] AS [u]
WHERE ([u].[UserName] = @__user_UserName_0) AND ([u].[Password] = @__user_PassWord_1)
2023-06-26 19:00:42.250 +05:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String'.
2023-06-26 19:00:42.255 +05:00 [INF] Executed action Web_Api.Controllers.AuthController.GetUser (Web Api) in 223.6925ms
2023-06-26 19:00:42.257 +05:00 [INF] Executed endpoint 'Web_Api.Controllers.AuthController.GetUser (Web Api)'
2023-06-26 19:00:42.262 +05:00 [INF] Request finished HTTP/2 POST https://localhost:7149/api/Auth/Login application/json 62 - 400 - text/plain;+charset=utf-8 258.2241ms
2023-06-26 20:13:53.018 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 20:13:56.124 +05:00 [INF] Executed DbCommand (263ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 20:13:56.420 +05:00 [INF] Executed DbCommand (256ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 20:13:56.670 +05:00 [INF] Executed DbCommand (237ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 20:13:56.918 +05:00 [INF] Executed DbCommand (240ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 20:13:57.160 +05:00 [INF] Executed DbCommand (236ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 20:13:57.403 +05:00 [INF] Executed DbCommand (237ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 20:13:58.100 +05:00 [INF] Executed DbCommand (240ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 20:13:58.145 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 20:13:58.775 +05:00 [INF] Executed DbCommand (236ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Departments] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 20:13:59.029 +05:00 [INF] Executed DbCommand (236ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Employees] AS [e]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 20:13:59.878 +05:00 [ERR] Failed executing DbCommand (267ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Employees] ([Age], [CNIC.no], [DepId], [Manager], [Employee Name], [Salary])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT [ID]
FROM [Employees]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
2023-06-26 20:14:00.280 +05:00 [ERR] An exception occurred in the database while saving changes for context type 'ClassLibrary2.DbContextcs'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Employees_Departments_DepId". The conflict occurred in database "Web Api_db", table "dbo.Departments", column 'Department ID'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:6e80a017-3571-494c-bbdf-c84666fec64d
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__104_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Employees_Departments_DepId". The conflict occurred in database "Web Api_db", table "dbo.Departments", column 'Department ID'.
The statement has been terminated.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at Microsoft.Data.SqlClient.SqlDataReader.get_MetaData()
   at Microsoft.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString, Boolean isInternal, Boolean forDescribeParameterEncryption, Boolean shouldCacheForAlwaysEncrypted)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean isAsync, Int32 timeout, Task& task, Boolean asyncWrite, Boolean inRetry, SqlDataReader ds, Boolean describeParameterEncryptionRequest)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry, String method)
   at Microsoft.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
ClientConnectionId:6e80a017-3571-494c-bbdf-c84666fec64d
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(StateManager stateManager, Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.<>c.<SaveChanges>b__104_0(DbContext _, ValueTuple`2 t)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
2023-06-26 20:16:22.627 +05:00 [INF] Entity Framework Core 6.0.5 initialized 'DbContextcs' using provider 'Microsoft.EntityFrameworkCore.SqlServer:6.0.5' with options: None
2023-06-26 20:16:25.415 +05:00 [INF] Executed DbCommand (254ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 20:16:25.688 +05:00 [INF] Executed DbCommand (249ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-06-26 20:16:25.944 +05:00 [INF] Executed DbCommand (234ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 20:16:26.186 +05:00 [INF] Executed DbCommand (232ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 20:16:26.423 +05:00 [INF] Executed DbCommand (232ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-06-26 20:16:26.660 +05:00 [INF] Executed DbCommand (233ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2023-06-26 20:16:26.925 +05:00 [INF] Executed DbCommand (233ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2023-06-26 20:16:26.967 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-06-26 20:16:27.562 +05:00 [INF] Executed DbCommand (232ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Departments] AS [d]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 20:16:27.807 +05:00 [INF] Executed DbCommand (232ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Employees] AS [e]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 20:16:28.865 +05:00 [INF] Executed DbCommand (254ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p2='?' (DbType = Int32), @p3='?' (Size = 4000), @p4='?' (Size = 4000), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Employees] ([Age], [CNIC.no], [DepId], [Manager], [Employee Name], [Salary])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5);
SELECT [ID]
FROM [Employees]
WHERE @@ROWCOUNT = 1 AND [ID] = scope_identity();
2023-06-26 20:16:29.405 +05:00 [INF] Executed DbCommand (234ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Users] AS [u]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-06-26 20:16:29.904 +05:00 [INF] Executed DbCommand (235ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [Users] ([Password], [UserName])
VALUES (@p0, @p1);
SELECT [Id]
FROM [Users]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();
2023-06-26 20:16:31.063 +05:00 [INF] User profile is available. Using 'C:\Users\Ali Hamza\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-06-26 20:16:31.471 +05:00 [INF] Now listening on: https://[::]:443
2023-06-26 20:16:31.486 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-06-26 20:16:31.493 +05:00 [INF] Hosting environment: Development
2023-06-26 20:16:31.509 +05:00 [INF] Content root path: C:\Users\Ali Hamza\source\repos\ClassLibrary2\Web Api
