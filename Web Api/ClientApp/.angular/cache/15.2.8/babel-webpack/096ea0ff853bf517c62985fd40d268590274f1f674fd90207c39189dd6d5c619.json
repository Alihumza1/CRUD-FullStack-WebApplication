{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service\";\nimport * as i2 from \"@angular/router\";\nexport class DepeditComponent {\n  constructor(service, router, Router) {\n    this.service = service;\n    this.router = router;\n    this.Router = Router;\n    this.employees = [];\n    this.editDepartment = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      manager: new FormControl('', [Validators.required]),\n      cnic: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.minLength(13), Validators.maxLength(13)]),\n      age: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.min(18), Validators.max(59)]),\n      salary: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.min(10000), Validators.max(100000)])\n    });\n    this.isUserValid = false;\n  }\n  ngOnInit() {\n    this.service.getAllEmployee().subscribe(data => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.id;\n    this.service.getDepartmentbyid(id).subscribe(data => {\n      this.editDepartment.patchValue({\n        name: data.name,\n        headname: data.headname,\n        depid: data.depId,\n        location: data.location\n      });\n    });\n  }\n  Submitted() {\n    const employee = {\n      id: parseInt(this.editEmployee.get('id')?.value || ''),\n      name: this.editEmployee.get('name')?.value,\n      manager: this.editEmployee.get('manager')?.value,\n      age: parseInt(this.editEmployee.get('age')?.value || ''),\n      salary: parseInt(this.editEmployee.get('salary')?.value || ''),\n      cnic: this.editEmployee.get('cnic')?.value,\n      depId: parseInt(this.editEmployee.get('depid')?.value || '')\n    };\n    this.service.updateEmployee(employee).subscribe(resp => {\n      this.router.navigate(['pages/home']);\n    }, error => {\n      alert('Unsuccessful !');\n    });\n  }\n  get id() {\n    return this.editEmployee.get('id');\n  }\n  get name() {\n    return this.editEmployee.get('name');\n  }\n  get manager() {\n    return this.editEmployee.get('manager');\n  }\n  get depid() {\n    return this.editEmployee.get('depid');\n  }\n  get cnic() {\n    return this.editEmployee.get('cnic');\n  }\n  get age() {\n    return this.editEmployee.get('age');\n  }\n  get salary() {\n    return this.editEmployee.get('salary');\n  }\n}\nDepeditComponent.ɵfac = function DepeditComponent_Factory(t) {\n  return new (t || DepeditComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nDepeditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DepeditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 2,\n  vars: 0,\n  template: function DepeditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"depedit works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","DepeditComponent","constructor","service","router","Router","name","required","pattern","minLength","maxLength","depid","manager","cnic","age","min","max","salary","ngOnInit","getAllEmployee","subscribe","data","employees","id","snapshot","queryParams","getDepartmentbyid","editDepartment","patchValue","headname","depId","location","Submitted","employee","parseInt","editEmployee","get","value","updateEmployee","resp","navigate","error","alert","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depedit\\depedit.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depedit\\depedit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Service } from 'src/app/services/service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { editEmployee } from 'src/app/models/employeeModel';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './depedit.component.html',\n  styleUrls: ['./depedit.component.css'],\n})\nexport class DepeditComponent implements OnInit {\n  constructor(\n    private service: Service,\n    private router: Router,\n    private Router: ActivatedRoute\n  ) {}\n  employees: any[] = [];\n  ngOnInit(): void {\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.id;\n    this.service.getDepartmentbyid(id).subscribe((data: any) => {\n      this.editDepartment.patchValue({\n        name: data.name,\n        headname:data.headname,\n        depid: data.depId,\n        location: data.location,\n      });\n    });\n  }\n  editDepartment = new FormGroup({\n    \n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    manager: new FormControl('', [Validators.required]),\n    cnic: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.minLength(13),\n      Validators.maxLength(13),\n    ]),\n    age: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.min(18),\n      Validators.max(59),\n    ]),\n    salary: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.min(10000),\n      Validators.max(100000),\n    ]),\n  });\n  isUserValid: boolean = false;\n  Submitted() {\n    const employee: editEmployee = {\n      id: parseInt(this.editEmployee.get('id')?.value || ''),\n      name: this.editEmployee.get('name')?.value as string,\n      manager: this.editEmployee.get('manager')?.value as string,\n      age: parseInt(this.editEmployee.get('age')?.value || ''),\n      salary: parseInt(this.editEmployee.get('salary')?.value || ''),\n      cnic: this.editEmployee.get('cnic')?.value as string,\n      depId: parseInt(this.editEmployee.get('depid')?.value || ''),\n    };\n    this.service.updateEmployee(employee).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/home']);\n      },\n      (error) => {\n        alert('Unsuccessful !');\n      }\n    );\n  }\n  get id(): FormControl {\n    return this.editEmployee.get('id') as FormControl;\n  }\n  get name(): FormControl {\n    return this.editEmployee.get('name') as FormControl;\n  }\n  get manager(): FormControl {\n    return this.editEmployee.get('manager') as FormControl;\n  }\n  get depid(): FormControl {\n    return this.editEmployee.get('depid') as FormControl;\n  }\n  get cnic(): FormControl {\n    return this.editEmployee.get('cnic') as FormControl;\n  }\n  get age(): FormControl {\n    return this.editEmployee.get('age') as FormControl;\n  }\n  get salary(): FormControl {\n    return this.editEmployee.get('salary') as FormControl;\n  }\n}\n","<p>depedit works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}