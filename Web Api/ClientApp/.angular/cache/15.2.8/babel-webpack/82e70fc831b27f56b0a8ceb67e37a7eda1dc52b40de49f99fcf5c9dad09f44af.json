{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseServerUrl = 'https://localhost:7149/api/';\n    this.apiUrl = 'https://localhost:7149/api/Employee';\n  }\n  getData() {\n    return this.http.get(this.apiUrl);\n  }\n  addform() {\n    return this.http.put(this.apiUrl + '/');\n  }\n  signinUser(signininfo) {\n    return this.http.post(this.baseServerUrl + 'Auth/Register', {\n      UserName: signininfo[0],\n      PassWord: signininfo[1]\n    }, {\n      responseType: 'text'\n    });\n  }\n  loginUser(logininfo) {\n    return this.http.post(this.baseServerUrl + 'Auth/Login', {\n      UserName: logininfo[0],\n      PassWord: logininfo[1]\n    }, {\n      responseType: 'text'\n    });\n  }\n  IsloggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  IsloggedOut() {\n    console.log('AuthService - logout');\n    localStorage.removeItem('token');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACxB,kBAAa,GAAG,6BAA6B;IACrC,WAAM,GAAG,qCAAqC;EAFf;EAGvCC,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC;EAC1C;EACAC,OAAO;IACL,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAQ,IAAI,CAACF,MAAM,GAAE,GAAG,CAAC;EAC/C;EACAG,UAAU,CAACC,UAAyB;IAClC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CACnB,IAAI,CAACC,aAAa,GAAG,eAAe,EACpC;MACEC,QAAQ,EAAEH,UAAU,CAAC,CAAC,CAAC;MACvBI,QAAQ,EAAEJ,UAAU,CAAC,CAAC;KACvB,EACD;MACEK,YAAY,EAAE;KACf,CACF;EACH;EACAC,SAAS,CAACC,SAAwB;IAChC,OAAO,IAAI,CAACd,IAAI,CAACQ,IAAI,CACnB,IAAI,CAACC,aAAa,GAAG,YAAY,EACjC;MACEC,QAAQ,EAAEI,SAAS,CAAC,CAAC,CAAC;MACtBH,QAAQ,EAAEG,SAAS,CAAC,CAAC;KACtB,EACD;MACEF,YAAY,EAAE;KACf,CACF;EACH;EACAG,UAAU;IACR,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;EACAC,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAElC;;AAzCWvB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAwB,SAAXxB,WAAW;EAAAyB,YAFV;AAAM","names":["AuthService","constructor","http","getData","get","apiUrl","addform","put","signinUser","signininfo","post","baseServerUrl","UserName","PassWord","responseType","loginUser","logininfo","IsloggedIn","localStorage","getItem","IsloggedOut","console","log","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n  baseServerUrl = 'https://localhost:7149/api/';\n  private apiUrl = 'https://localhost:7149/api/Employee';\n  getData(): Observable<any[]> {\n    return this.http.get<any[]>(this.apiUrl);\n  }\n  addform():Observable<any[]>{\n    return this.http.put<any[]>(this.apiUrl +'/')\n  }\n  signinUser(signininfo: Array<string>) {\n    return this.http.post(\n      this.baseServerUrl + 'Auth/Register',\n      {\n        UserName: signininfo[0],\n        PassWord: signininfo[1],\n      },\n      {\n        responseType: 'text',\n      }\n    );\n  }\n  loginUser(logininfo: Array<string>) {\n    return this.http.post(\n      this.baseServerUrl + 'Auth/Login',\n      {\n        UserName: logininfo[0],\n        PassWord: logininfo[1],\n      },\n      {\n        responseType: 'text',\n      }\n    );\n  }\n  IsloggedIn(){\n    return !!localStorage.getItem('token');\n  }\n  IsloggedOut(){\n    console.log('AuthService - logout');\n    localStorage.removeItem('token');\n    \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}