{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Email is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Password should be at least 6 and as long as 14 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"signup\"];\n};\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(service, router) {\n      this.service = service;\n      this.router = router;\n      this.loginForm = new FormGroup({\n        inputEmail: new FormControl('', [Validators.required, Validators.email]),\n        inputPassword: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(14)])\n      });\n    }\n    ngOnInit() {}\n    Submitted() {\n      this.service.loginUser([this.loginForm.value.inputEmail, this.loginForm.value.inputPassword]).subscribe(resp => {\n        const respObj = JSON.parse(resp);\n        this.router.navigate(['pages/home']);\n        localStorage.setItem('token', respObj.token);\n        alert('Successfully Login');\n      }, error => {\n        alert('Username or Password is incorrect !');\n      });\n    }\n    get Email() {\n      return this.loginForm.get('inputEmail');\n    }\n    get PWD() {\n      return this.loginForm.get('inputPassword');\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 8,\n    consts: [[1, \"container\", \"pt-5\"], [1, \"mx-auto\", \"border\", \"p-4\", \"bg-light\", \"shadow-lg\", 2, \"width\", \"400px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"type\", \"email\", \"id\", \"inputEmail\", \"placeholder\", \"Email address\", \"formControlName\", \"inputEmail\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Password\", \"formControlName\", \"inputPassword\", \"required\", \"\", 1, \"form-control\"], [1, \"d-grid\", \"gap-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"text-center\"], [1, \"btn\", \"btn-success\", 3, \"routerLink\"], [1, \"form-text\", \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.Submitted();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelement(4, \"input\", 4);\n        i0.ɵɵtemplate(5, LoginComponent_div_5_Template, 2, 0, \"div\", 5);\n        i0.ɵɵtemplate(6, LoginComponent_div_6_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 2, 0, \"div\", 5);\n        i0.ɵɵtemplate(10, LoginComponent_div_10_Template, 2, 0, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"button\", 8)(13, \"b\");\n        i0.ɵɵtext(14, \"Log in\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(15, \"hr\");\n        i0.ɵɵelementStart(16, \"div\", 9)(17, \"button\", 10);\n        i0.ɵɵtext(18, \" Create new account\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"required\"]) && (ctx.Email.dirty || ctx.Email.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"email\"]) && (ctx.Email.dirty || ctx.Email.touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"required\"]) && (ctx.PWD.dirty || ctx.PWD.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"minlength\"]) || (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"maxlength\"]) && (ctx.Email.dirty || ctx.Email.touched));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c0));\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i2.RouterLink, i4.FormGroupDirective, i4.FormControlName]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}