{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet DepaddComponent = class DepaddComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.employees = [];\n    this.addDepartment = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      headname: new FormControl('', [Validators.required]),\n      location: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)])\n    });\n  }\n  ngOnInit() {\n    this.service.getAllEmployee().subscribe(data => {\n      this.employees = data;\n    });\n  }\n  Submit() {\n    const department = {\n      name: this.addDepartment.get('name')?.value,\n      headName: this.addDepartment.get('headname')?.value,\n      location: this.addDepartment.get('location')?.value\n    };\n    this.service.addDepartment(department).subscribe(resp => {\n      this.router.navigate(['pages/dephome']);\n    }, error => {\n      alert('Unsuccessful !');\n    });\n  }\n  get name() {\n    return this.addDepartment.get('name');\n  }\n  get headname() {\n    return this.addDepartment.get('headname');\n  }\n  get location() {\n    return this.addDepartment.get('location');\n  }\n};\nDepaddComponent = __decorate([Component({\n  selector: 'app-add',\n  templateUrl: './depadd.component.html',\n  styleUrls: ['./depadd.component.css']\n})], DepaddComponent);\nexport { DepaddComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;AAS5D,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAC1BC,YACUC,OAAgB,EAChBC,MAAc;IADd,YAAO,GAAPD,OAAO;IACP,WAAM,GAANC,MAAM;IAEhB,cAAS,GAAU,EAAE;IAMrB,kBAAa,GAAG,IAAIN,SAAS,CAAC;MAC5BO,IAAI,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CACxBC,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACO,OAAO,CAAC,YAAY,CAAC,EAChCP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EACvBR,UAAU,CAACS,SAAS,CAAC,EAAE,CAAC,CACzB,CAAC;MACFC,KAAK,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACM,QAAQ,CAAC,CAAC;MACjDK,QAAQ,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACM,QAAQ,CAAC,CAAC;MACpDM,QAAQ,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAC5BC,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACO,OAAO,CAAC,YAAY,CAAC,EAChCP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EACvBR,UAAU,CAACS,SAAS,CAAC,EAAE,CAAC,CACzB;KACF,CAAC;EAtBC;EAEHI,QAAQ;IACN,IAAI,CAACV,OAAO,CAACW,cAAc,EAAE,CAACC,SAAS,CAAEC,IAAW,IAAI;MACtD,IAAI,CAACC,SAAS,GAAGD,IAAI;IACvB,CAAC,CAAC;EACJ;EAiBAE,MAAM;IACJ,MAAMC,UAAU,GAAqB;MACnCd,IAAI,EAAE,IAAI,CAACe,aAAa,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAe;MACrDC,QAAQ,EAAE,IAAI,CAACH,aAAa,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAe;MAC7DV,QAAQ,EAAE,IAAI,CAACQ,aAAa,CAACC,GAAG,CAAC,UAAU,CAAC,EAAEC;KAC/C;IACD,IAAI,CAACnB,OAAO,CAACiB,aAAa,CAACD,UAAU,CAAC,CAACJ,SAAS,CAC7CS,IAAI,IAAI;MACP,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IACzC,CAAC,EACAC,KAAK,IAAI;MACRC,KAAK,CAAC,gBAAgB,CAAC;IACzB,CAAC,CACF;EACH;EACA,IAAItB,IAAI;IACN,OAAO,IAAI,CAACe,aAAa,CAACC,GAAG,CAAC,MAAM,CAAgB;EACtD;EACA,IAAIV,QAAQ;IACV,OAAO,IAAI,CAACS,aAAa,CAACC,GAAG,CAAC,UAAU,CAAgB;EAC1D;EACA,IAAIT,QAAQ;IACV,OAAO,IAAI,CAACQ,aAAa,CAACC,GAAG,CAAC,UAAU,CAAgB;EAC1D;CACD;AAnDYpB,eAAe,eAL3BJ,SAAS,CAAC;EACT+B,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACW7B,eAAe,CAmD3B;SAnDYA,eAAe","names":["Component","FormGroup","FormControl","Validators","DepaddComponent","constructor","service","router","name","required","pattern","minLength","maxLength","depid","headname","location","ngOnInit","getAllEmployee","subscribe","data","employees","Submit","department","addDepartment","get","value","headName","resp","navigate","error","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depadd\\depadd.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Service } from 'src/app/services/service';\nimport {  Router } from '@angular/router';\nimport { createDepartment } from 'src/app/models/departmentModel';\n@Component({\n  selector: 'app-add',\n  templateUrl: './depadd.component.html',\n  styleUrls: ['./depadd.component.css'],\n})\nexport class DepaddComponent implements OnInit {\n  constructor(\n    private service: Service,\n    private router: Router,\n  ) {}\n  employees: any[] = [];\n  ngOnInit(): void {\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employees = data;\n    });\n  }\n  addDepartment = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    headname: new FormControl('', [Validators.required]),\n    location: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n  });\n  Submit(): void {\n    const department: createDepartment = {\n      name: this.addDepartment.get('name')?.value as string,\n      headName: this.addDepartment.get('headname')?.value as string,\n      location: this.addDepartment.get('location')?.value as string,\n    };\n    this.service.addDepartment(department).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/dephome']);\n      },\n      (error) => {\n        alert('Unsuccessful !');\n      }\n    );\n  }\n  get name(): FormControl {\n    return this.addDepartment.get('name') as FormControl;\n  }\n  get headname(): FormControl {\n    return this.addDepartment.get('headname') as FormControl;\n  }\n  get location(): FormControl {\n    return this.addDepartment.get('location') as FormControl;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}