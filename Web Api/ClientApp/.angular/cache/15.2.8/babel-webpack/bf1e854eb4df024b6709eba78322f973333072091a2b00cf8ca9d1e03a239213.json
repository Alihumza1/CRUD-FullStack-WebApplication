{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"angular-datatables\";\nconst _c0 = function () {\n  return [\"/pages/add\"];\n};\nexport class HomeComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.dtOptions = {};\n  }\n  ngOnInit() {\n    this.fetchData();\n  }\n  fetchData() {\n    this.dtOptions = {\n      processing: true,\n      serverSide: true,\n      paging: true,\n      searching: true,\n      ordering: true,\n      ajax: (dataTablesParameters, callback) => {\n        this.http.post('https://localhost:7149/api/Employee/all-Employees', dataTablesParameters).subscribe(response => {\n          callback({\n            recordsTotal: response.recordsTotal,\n            recordsFiltered: response.recordsFiltered,\n            data: response.data\n          });\n        });\n      },\n      columns: [{\n        title: 'Id',\n        data: 'id',\n        visible: false\n      }, {\n        title: 'Name',\n        data: 'name'\n      }, {\n        title: 'DepId',\n        data: 'depId',\n        visible: false\n      }, {\n        title: 'Cnic',\n        data: 'cnic'\n      }, {\n        title: 'Age',\n        data: 'age'\n      }, {\n        title: 'Salary',\n        data: 'salary'\n      }, {\n        data: null,\n        render: data => '<a class=\"btn btn-info edit-button\" data-id=\"' + data.id + '\">Edit</a>  ' + '<a class=\"btn btn-danger delete-button\" data-id=\"' + data.id + '\">Delete</a>'\n      }],\n      columnDefs: [{\n        targets: [1],\n        orderable: true,\n        searchable: true\n      }, {\n        targets: '_all',\n        orderable: false,\n        searchable: false\n      }],\n      rowCallback: (row, data, index) => {\n        $('.edit-button', row).off('click');\n        $('.edit-button', row).on('click', () => {\n          const id = data.id;\n          // Handle edit logic here, e.g., navigate to edit route\n          this.router.navigate(['edit/:', id]);\n        });\n        return row;\n      }\n    };\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 22,\n  vars: 3,\n  consts: [[1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"id\", \"myTable\", \"datatable\", \"\", 1, \"table\", \"table-bordered\", 3, \"dtOptions\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Add Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"br\")(3, \"br\");\n      i0.ɵɵelementStart(4, \"table\", 1)(5, \"thead\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"DepId\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Cnic\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Age\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"Salary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Actions\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(21, \"tbody\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions);\n    }\n  },\n  dependencies: [i2.RouterLink, i3.DataTableDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["HomeComponent","constructor","http","router","ngOnInit","fetchData","dtOptions","processing","serverSide","paging","searching","ordering","ajax","dataTablesParameters","callback","post","subscribe","response","recordsTotal","recordsFiltered","data","columns","title","visible","render","id","columnDefs","targets","orderable","searchable","rowCallback","row","index","$","off","on","navigate","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  dtOptions: DataTables.Settings = {};\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    this.dtOptions = {\r\n      processing: true,\r\n      serverSide: true,\r\n      paging: true,\r\n      searching: true,\r\n      ordering: true,\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        this.http\r\n          .post(\r\n            'https://localhost:7149/api/Employee/all-Employees',\r\n            dataTablesParameters\r\n          )\r\n          .subscribe((response: any) => {\r\n            callback({\r\n              recordsTotal: response.recordsTotal,\r\n              recordsFiltered: response.recordsFiltered,\r\n              data: response.data,\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        { title: 'Id', data: 'id', visible: false },\r\n        { title: 'Name', data: 'name' },\r\n        { title: 'DepId', data: 'depId', visible: false },\r\n        { title: 'Cnic', data: 'cnic' },\r\n        { title: 'Age', data: 'age' },\r\n        { title: 'Salary', data: 'salary' },\r\n        {\r\n          data: null,\r\n          render: (data: any) =>\r\n            '<a class=\"btn btn-info edit-button\" data-id=\"' +\r\n            data.id +\r\n            '\">Edit</a>  ' +\r\n            '<a class=\"btn btn-danger delete-button\" data-id=\"' +\r\n            data.id +\r\n            '\">Delete</a>',\r\n        },\r\n      ],\r\n      columnDefs: [\r\n        {\r\n          targets: [1],\r\n          orderable: true,\r\n          searchable: true,\r\n        },\r\n        {\r\n          targets: '_all',\r\n          orderable: false,\r\n          searchable: false,\r\n        },\r\n      ],\r\n      rowCallback: (row: Node, data: any[] | Object, index: number) => {\r\n        $('.edit-button', row).off('click');\r\n        $('.edit-button', row).on('click', () => {\r\n          const id = (data as any).id;\r\n          // Handle edit logic here, e.g., navigate to edit route\r\n          this.router.navigate(['edit/:', id]);\r\n        });\r\n\r\n        return row;\r\n      },\r\n    };\r\n  }\r\n}\r\n","<button class=\"btn btn-primary\"  [routerLink]=\"['/pages/add']\">Add Employee</button>\r\n<br>\r\n<br>\r\n\r\n<table id=\"myTable\" datatable [dtOptions]=\"dtOptions\"  class=\"table  table-bordered\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>DepId</th>\r\n        <th>Cnic</th>\r\n        <th>Age</th>\r\n        <th>Salary</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n     \r\n    </tbody>\r\n  </table>\r\n\r\n\r\n  \r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}