{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet LoginComponent = class LoginComponent {\n  constructor(loginAuth, router) {\n    this.loginAuth = loginAuth;\n    this.router = router;\n    this.loginForm = new FormGroup({\n      inputEmail: new FormControl('', [Validators.required, Validators.email]),\n      inputPassword: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(14)])\n    });\n  }\n  ngOnInit() {}\n  Submitted() {\n    this.loginAuth.loginUser([this.loginForm.value.inputEmail, this.loginForm.value.inputPassword]).subscribe(resp => {\n      const respObj = JSON.parse(resp);\n      this.router.navigate(['pages/home']);\n      localStorage.setItem('token', respObj.token);\n      alert('Successfully Login');\n    }, error => {\n      alert('Username or Password is incorrect !');\n    });\n  }\n  get Email() {\n    return this.loginForm.get('inputEmail');\n  }\n  get PWD() {\n    return this.loginForm.get('inputPassword');\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAQC,SAAS,EAACC,WAAW,EAACC,UAAU,QAAO,gBAAgB;AAQxD,IAAMC,cAAc,GAApB,MAAMA,cAAc;EACzBC,YAAoBC,SAAsB,EAAUC,MAAc;IAA9C,cAAS,GAATD,SAAS;IAAuB,WAAM,GAANC,MAAM;IAE1D,cAAS,GAAG,IAAIN,SAAS,CAAC;MACxBO,UAAU,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,KAAK,CAAC,CAAC;MACxEC,aAAa,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACM,QAAQ,EAACN,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,EAACT,UAAU,CAACU,SAAS,CAAC,EAAE,CAAC,CAAE;KAC3G,CAAC;EALmE;EACrEC,QAAQ,IAAU;EAKlBC,SAAS;IACP,IAAI,CAACT,SAAS,CACXU,SAAS,CAAC,CACT,IAAI,CAACC,SAAS,CAACC,KAAK,CAACV,UAAoB,EACzC,IAAI,CAACS,SAAS,CAACC,KAAK,CAACP,aAAuB,CAC7C,CAAC,CACDQ,SAAS,CACPC,IAAI,IAAI;MACP,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;MAChC,IAAI,CAACb,MAAM,CAACiB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;MACpCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,OAAO,CAACM,KAAK,CAAC;MAC5CC,KAAK,CAAC,oBAAoB,CAAC;IAC7B,CAAC,EACAC,KAAK,IAAI;MACRD,KAAK,CAAC,qCAAqC,CAAC;IAC9C,CAAC,CACF;EACL;EACA,IAAIE,KAAK;IACP,OAAO,IAAI,CAACb,SAAS,CAACc,GAAG,CAAC,YAAY,CAAgB;EACxD;EACA,IAAIC,GAAG;IACL,OAAO,IAAI,CAACf,SAAS,CAACc,GAAG,CAAC,eAAe,CAAgB;EAC3D;CACD;AA/BY3B,cAAc,eAL1BJ,SAAS,CAAC;EACTiC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACW/B,cAAc,CA+B1B;SA/BYA,cAAc","names":["Component","FormGroup","FormControl","Validators","LoginComponent","constructor","loginAuth","router","inputEmail","required","email","inputPassword","minLength","maxLength","ngOnInit","Submitted","loginUser","loginForm","value","subscribe","resp","respObj","JSON","parse","navigate","localStorage","setItem","token","alert","error","Email","get","PWD","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormGroup,FormControl,Validators} from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  constructor(private loginAuth: AuthService, private router: Router) {}\n  ngOnInit(): void {}\n  loginForm = new FormGroup({\n    inputEmail: new FormControl('', [Validators.required, Validators.email]),\n    inputPassword: new FormControl('', [Validators.required,Validators.minLength(8),Validators.maxLength(14),])\n  });\n  Submitted() {\n    this.loginAuth\n      .loginUser([\n        this.loginForm.value.inputEmail as string,\n        this.loginForm.value.inputPassword as string,\n      ])\n      .subscribe(\n        (resp) => {\n          const respObj = JSON.parse(resp);\n          this.router.navigate(['pages/home']);\n          localStorage.setItem('token', respObj.token);\n          alert('Successfully Login')\n        },\n        (error) => {\n          alert('Username or Password is incorrect !');\n        }\n      );\n  }\n  get Email(): FormControl {\n    return this.loginForm.get('inputEmail') as FormControl;\n  }\n  get PWD(): FormControl {\n    return this.loginForm.get('inputPassword') as FormControl;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}