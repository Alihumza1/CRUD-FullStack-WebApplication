{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet DepeditComponent = class DepeditComponent {\n  constructor(service, router, Router) {\n    this.service = service;\n    this.router = router;\n    this.Router = Router;\n    this.employees = [];\n    this.editDepartment = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      headname: new FormControl('', [Validators.required]),\n      location: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(2), Validators.maxLength(25)])\n    });\n  }\n  ngOnInit() {\n    this.service.getAllEmployee().subscribe(data => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.depid;\n    this.service.getDepartmentbyid(id).subscribe(data => {\n      this.editDepartment.patchValue({});\n    });\n  }\n  Submit() {\n    const department = {\n      depId: parseInt(this.editDepartment.get('depid')?.value || ''),\n      name: this.editDepartment.get('name')?.value,\n      headName: this.editDepartment.get('headname')?.value,\n      location: this.editDepartment.get('location')?.value\n    };\n    this.service.updateDepartment(department).subscribe(resp => {\n      this.router.navigate(['pages/dephome']);\n    }, error => {\n      alert('Unsuccessful !');\n    });\n  }\n  get depid() {\n    return this.editDepartment.get('depid');\n  }\n  get name() {\n    return this.editDepartment.get('name');\n  }\n  get headname() {\n    return this.editDepartment.get('headname');\n  }\n  get location() {\n    return this.editDepartment.get('location');\n  }\n};\nDepeditComponent = __decorate([Component({\n  selector: 'app-edit',\n  templateUrl: './depedit.component.html',\n  styleUrls: ['./depedit.component.css']\n})], DepeditComponent);\nexport { DepeditComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","DepeditComponent","constructor","service","router","Router","name","required","pattern","minLength","maxLength","depid","headname","location","ngOnInit","getAllEmployee","subscribe","data","employees","id","snapshot","queryParams","getDepartmentbyid","editDepartment","patchValue","Submit","department","depId","parseInt","get","value","headName","updateDepartment","resp","navigate","error","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depedit\\depedit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Service } from 'src/app/services/service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { editEmployee } from 'src/app/models/employeeModel';\nimport { editDepartment } from 'src/app/models/departmentModel';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './depedit.component.html',\n  styleUrls: ['./depedit.component.css'],\n})\nexport class DepeditComponent implements OnInit {\n  constructor(\n    private service: Service,\n    private router: Router,\n    private Router: ActivatedRoute\n  ) {}\n  employees: any[] = [];\n  ngOnInit(): void {\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.depid;\n    this.service.getDepartmentbyid(id).subscribe((data: any) => {\n      this.editDepartment.patchValue({\n        \n      });\n    });\n  }\n  editDepartment = new FormGroup({\n    \n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    headname: new FormControl('', [Validators.required]),\n    location: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(2),\n      Validators.maxLength(25),\n    ]),\n  });\n  Submit() {\n    const department: editDepartment = {\n      depId: parseInt(this.editDepartment.get('depid')?.value || ''),\n      name: this.editDepartment.get('name')?.value as string,\n      headName: this.editDepartment.get('headname')?.value as string,\n      location: this.editDepartment.get('location')?.value as string,\n    };\n    this.service.updateDepartment(department).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/dephome']);\n      },\n      (error) => {\n        alert('Unsuccessful !');\n      }\n    );\n  }\n \n  \n  get depid(): FormControl {\n    return this.editDepartment.get('depid') as FormControl;\n  }\n  get name(): FormControl {\n    return this.editDepartment.get('name') as FormControl;\n  }\n  get headname(): FormControl {\n    return this.editDepartment.get('headname') as FormControl;\n  }\n  get location(): FormControl {\n    return this.editDepartment.get('location') as FormControl;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}