{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet EditComponent = class EditComponent {\n  constructor(signinAuth, router, Router) {\n    this.signinAuth = signinAuth;\n    this.router = router;\n    this.Router = Router;\n    this.addForm = new FormGroup({\n      id: new FormControl('', [Validators.required]),\n      name: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      cnic: new FormControl('', [Validators.required, Validators.minLength(13), Validators.maxLength(13)]),\n      age: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]),\n      salary: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(6)])\n    });\n    this.isUserValid = false;\n  }\n  ngOnInit() {\n    const id = this.Router.snapshot.params.id;\n    this.signinAuth.getEmployeebyid(id).subscribe(data => {\n      this.addForm.patchValue({\n        id: data.id,\n        name: data.name,\n        depid: data.depId,\n        cnic: data.cnic,\n        age: data.age,\n        salary: data.salary\n      });\n    });\n  }\n  Submitted() {\n    const employee = {\n      id: this.addForm.get('id')?.value,\n      name: this.addForm.get('name')?.value,\n      age: this.addForm.get('age')?.value,\n      salary: this.addForm.get('salary')?.value,\n      cnic: this.addForm.get('cnic')?.value,\n      depId: this.addForm.get('depid')?.value\n    };\n    this.signinAuth.updateEmployee(employee).subscribe(resp => {\n      if (resp.length === 0) {\n        this.isUserValid = false;\n        alert('Unsuccessful');\n      } else {\n        this.router.navigate(['pages/home']);\n      }\n    });\n  }\n  get id() {\n    return this.addForm.get('id');\n  }\n  get name() {\n    return this.addForm.get('name');\n  }\n  get depid() {\n    return this.addForm.get('depid');\n  }\n  get cnic() {\n    return this.addForm.get('cnic');\n  }\n  get age() {\n    return this.addForm.get('age');\n  }\n  get salary() {\n    return this.addForm.get('salary');\n  }\n};\nEditComponent = __decorate([Component({\n  selector: 'app-add',\n  templateUrl: './e.component.html',\n  styleUrls: ['./edit.component.css']\n})], EditComponent);\nexport { EditComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","EditComponent","constructor","signinAuth","router","Router","id","required","name","minLength","maxLength","depid","cnic","age","salary","ngOnInit","snapshot","params","getEmployeebyid","subscribe","data","addForm","patchValue","depId","Submitted","employee","get","value","updateEmployee","resp","length","isUserValid","alert","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\add\\add.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormArray,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Employee } from 'src/app/models/employee';\n@Component({\n  selector: 'app-add',\n  templateUrl: './e.component.html',\n  styleUrls: ['./edit.component.css'],\n})\nexport class EditComponent implements OnInit {\n  constructor(\n    private signinAuth: AuthService,\n    private router: Router,\n    private Router: ActivatedRoute\n  ) {}\n  ngOnInit(): void {\n    const id = this.Router.snapshot.params.id;\n    this.signinAuth.getEmployeebyid(id).subscribe((data: any) => {\n      this.addForm.patchValue({\n        id: data.id,\n        name: data.name,\n        depid: data.depId,\n        cnic: data.cnic,\n        age: data.age,\n        salary: data.salary,\n      });\n    });\n  }\n  addForm = new FormGroup({\n    id: new FormControl('', [Validators.required]),\n    name: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    cnic: new FormControl('', [\n      Validators.required,\n      Validators.minLength(13),\n      Validators.maxLength(13),\n    ]),\n    age: new FormControl('', [\n      Validators.required,\n      Validators.minLength(2),\n      Validators.maxLength(2),\n    ]),\n    salary: new FormControl('', [\n      Validators.required,\n      Validators.minLength(5),\n      Validators.maxLength(6),\n    ]),\n  });\n  isUserValid: boolean = false;\n  Submitted() {\n    const employee: Employee = {\n      id: this.addForm.get('id')?.value,\n      name: this.addForm.get('name')?.value,\n      age: this.addForm.get('age')?.value,\n      salary: this.addForm.get('salary')?.value,\n      cnic: this.addForm.get('cnic')?.value,\n      depId: this.addForm.get('depid')?.value,\n    };\n\n    this.signinAuth.updateEmployee(employee).subscribe((resp: any[]) => {\n      if (resp.length === 0) {\n        this.isUserValid = false;\n        alert('Unsuccessful');\n      } else {\n        this.router.navigate(['pages/home']);\n      }\n    });\n  }\n  get id(): FormControl {\n    return this.addForm.get('id') as FormControl;\n  }\n  get name(): FormControl {\n    return this.addForm.get('name') as FormControl;\n  }\n  get depid(): FormControl {\n    return this.addForm.get('depid') as FormControl;\n  }\n  get cnic(): FormControl {\n    return this.addForm.get('cnic') as FormControl;\n  }\n  get age(): FormControl {\n    return this.addForm.get('age') as FormControl;\n  }\n  get salary(): FormControl {\n    return this.addForm.get('salary') as FormControl;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}