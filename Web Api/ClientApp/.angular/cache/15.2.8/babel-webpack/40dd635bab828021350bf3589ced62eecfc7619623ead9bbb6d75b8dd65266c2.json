{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/logging.service\";\nexport class GlobalErrorHandler {\n  constructor(loggingService) {\n    this.loggingService = loggingService;\n  }\n  handleError(error) {\n    // Log the error using the LoggingService\n    const message = 'An error occurred: ' + error.message;\n    const level = 'ERROR';\n    this.loggingService.log(message, level);\n    throw error;\n  }\n}\nGlobalErrorHandler.ɵfac = function GlobalErrorHandler_Factory(t) {\n  return new (t || GlobalErrorHandler)(i0.ɵɵinject(i1.LoggingService));\n};\nGlobalErrorHandler.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GlobalErrorHandler,\n  factory: GlobalErrorHandler.ɵfac\n});","map":{"version":3,"mappings":";;AAIA,OAAM,MAAOA,kBAAkB;EAC7BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;EAAmB;EAErDC,WAAW,CAACC,KAAU;IACpB;IACA,MAAMC,OAAO,GAAG,qBAAqB,GAAGD,KAAK,CAACC,OAAO;IACrD,MAAMC,KAAK,GAAG,OAAO;IACrB,IAAI,CAACJ,cAAc,CAACK,GAAG,CAACF,OAAO,EAAEC,KAAK,CAAC;IACvC,MAAMF,KAAK;EACb;;AATWJ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAQ,SAAlBR,kBAAkB;AAAA","names":["GlobalErrorHandler","constructor","loggingService","handleError","error","message","level","log","factory"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\services\\GlobalErrorHandler.ts"],"sourcesContent":["import { ErrorHandler, Injectable } from '@angular/core';\r\nimport { LoggingService } from 'src/app/services/logging.service';\r\n\r\n@Injectable()\r\nexport class GlobalErrorHandler implements ErrorHandler {\r\n  constructor(private loggingService: LoggingService) {}\r\n\r\n  handleError(error: any): void {\r\n    // Log the error using the LoggingService\r\n    const message = 'An error occurred: ' + error.message;\r\n    const level = 'ERROR';\r\n    this.loggingService.log(message, level);\r\n    throw error;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}