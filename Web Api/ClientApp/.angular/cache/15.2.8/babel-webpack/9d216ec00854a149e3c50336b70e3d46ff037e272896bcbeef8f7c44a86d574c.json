{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction SignupComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Email is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Password should be at least 8 and as long as 14 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"\"];\n};\nexport class SignupComponent {\n  constructor(signin, router) {\n    this.signin = signin;\n    this.router = router;\n    this.signinForm = new FormGroup({\n      inputEmail: new FormControl('', [Validators.required, Validators.email]),\n      inputPassword: new FormControl('', [Validators.required, Validators.minLength(8), Validators.maxLength(14)])\n    });\n    this.isUserValid = false;\n  }\n  ngOnInit() {}\n  Submitted() {\n    this.signin.signinUser([this.signinForm.value.inputEmail, this.signinForm.value.inputPassword]).subscribe(resp => {\n      alert('Account Created ');\n      this.router.navigate(['pages/home']);\n    }, error => {\n      alert('Unsuccesful');\n    });\n  }\n  get Email() {\n    return this.signinForm.get('inputEmail');\n  }\n  get PWD() {\n    return this.signinForm.get('inputPassword');\n  }\n}\nSignupComponent.ɵfac = function SignupComponent_Factory(t) {\n  return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.Router));\n};\nSignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SignupComponent,\n  selectors: [[\"app-signup\"]],\n  decls: 26,\n  vars: 8,\n  consts: [[1, \"container\", \"pt-5\"], [1, \"mx-auto\", \"border\", \"p-4\", \"bg-light\", \"shadow-lg\", 2, \"width\", \"400px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"type\", \"email\", \"id\", \"inputEmail\", \"placeholder\", \"Enter your Email\", \"formControlName\", \"inputEmail\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Enter your Password\", \"formControlName\", \"inputPassword\", \"required\", \"\", 1, \"form-control\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"fw-bold\", \"text-body\", 3, \"routerLink\"], [1, \"form-text\", \"text-danger\"]],\n  template: function SignupComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\")(3, \"b\");\n      i0.ɵɵtext(4, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"h6\");\n      i0.ɵɵtext(6, \"It's quick and easy.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵelementStart(8, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_8_listener() {\n        return ctx.Submitted();\n      });\n      i0.ɵɵelementStart(9, \"div\", 3);\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵtemplate(11, SignupComponent_div_11_Template, 2, 0, \"div\", 5);\n      i0.ɵɵtemplate(12, SignupComponent_div_12_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 3);\n      i0.ɵɵelement(14, \"input\", 6);\n      i0.ɵɵtemplate(15, SignupComponent_div_15_Template, 2, 0, \"div\", 5);\n      i0.ɵɵtemplate(16, SignupComponent_div_16_Template, 2, 0, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 7)(18, \"button\", 8);\n      i0.ɵɵtext(19, \"Sign Up\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(20, \"hr\");\n      i0.ɵɵelementStart(21, \"p\", 7);\n      i0.ɵɵtext(22, \"Have already an account? \");\n      i0.ɵɵelementStart(23, \"a\", 9)(24, \"u\");\n      i0.ɵɵtext(25, \"Log in\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.signinForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"required\"]) && (ctx.Email.dirty || ctx.Email.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"email\"]) && (ctx.Email.dirty || ctx.Email.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"required\"]) && (ctx.PWD.dirty || ctx.PWD.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"minlength\"]) || (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"maxlength\"]) && (ctx.Email.dirty || ctx.Email.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.signinForm.invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(7, _c0));\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i2.RouterLink, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SACEA,SAAS,EAGTC,WAAW,EACXC,UAAU,QACL,gBAAgB;;;;;;;;ICEHC,+BAAwG;IACpGA,mCACJ;IAAAA,iBAAM;;;;;IACNA,+BAAoG;IAClGA,kCACJ;IAAAA,iBAAM;;;;;IAIJA,+BAAmG;IACjGA,sCACJ;IAAAA,iBAAM;;;;;IACNA,+BAAoI;IAClIA,iFACJ;IAAAA,iBAAM;;;;;;ADRtB,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,MAAe,EAAUC,MAAc;IAAvC,WAAM,GAAND,MAAM;IAAmB,WAAM,GAANC,MAAM;IAGnD,eAAU,GAAG,IAAIP,SAAS,CAAC;MACzBQ,UAAU,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACQ,KAAK,CAAC,CAAC;MACxEC,aAAa,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CACjCC,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,EACvBV,UAAU,CAACW,SAAS,CAAC,EAAE,CAAC,CACzB;KACF,CAAC;IACF,gBAAW,GAAY,KAAK;EAXkC;EAE9DC,QAAQ,IAAU;EAUlBC,SAAS;IACP,IAAI,CAACT,MAAM,CACRU,UAAU,CAAC,CACV,IAAI,CAACC,UAAU,CAACC,KAAK,CAACV,UAAoB,EAC1C,IAAI,CAACS,UAAU,CAACC,KAAK,CAACP,aAAuB,CAC9C,CAAC,CACDQ,SAAS,CACPC,IAAI,IAAI;MACPC,KAAK,CAAC,kBAAkB,CAAC;MACzB,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EACAC,KAAK,IAAI;MACRF,KAAK,CAAC,aAAa,CAAC;IACtB,CAAC,CACF;EACL;EAEA,IAAIG,KAAK;IACP,OAAO,IAAI,CAACP,UAAU,CAACQ,GAAG,CAAC,YAAY,CAAgB;EACzD;EACA,IAAIC,GAAG;IACL,OAAO,IAAI,CAACT,UAAU,CAACQ,GAAG,CAAC,eAAe,CAAgB;EAC5D;;AAnCWrB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdhB5B,8BAA6B;MAEnBA,uBAAO;MAAAA,iBAAI;MACnBA,0BAAI;MAAAA,oCAAoB;MAAAA,iBAAK;MAC7BA,qBAAI;MACJA,+BAAwD;MAAzBA;QAAA,OAAY6B,eAAW;MAAA,EAAC;MACrD7B,8BAAkB;MACdA,4BAA8H;MAC9HA,kEAEM;MACNA,kEAEI;MACNA,iBAAM;MACNA,+BAAkB;MAChBA,4BAA2I;MAC3IA,kEAEI;MACNA,kEAEI;MACJA,iBAAM;MACNA,+BAAyB;MACuDA,wBAAO;MAAAA,iBAAS;MAEhGA,sBAAI;MACNA,6BAAuB;MAAAA,0CAAyB;MAAAA,6BACpB;MAAGA,uBAAM;MAAAA,iBAAI;;;MAxBrCA,eAAwB;MAAxBA,0CAAwB;MAGYA,eAAkE;MAAlEA,iIAAkE;MAGnEA,eAA+D;MAA/DA,8HAA+D;MAM7DA,eAA4D;MAA5DA,yHAA4D;MAG/DA,eAA8F;MAA9FA,+LAA8F;MAK1GA,eAA+B;MAA/BA,iDAA+B;MAGNA,eAAmB;MAAnBA,uDAAmB","names":["FormGroup","FormControl","Validators","i0","SignupComponent","constructor","signin","router","inputEmail","required","email","inputPassword","minLength","maxLength","ngOnInit","Submitted","signinUser","signinForm","value","subscribe","resp","alert","navigate","error","Email","get","PWD","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\signup\\signup.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\signup\\signup.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormArray,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { Service } from '../services/service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  constructor(private signin: Service, private router: Router) {}\n\n  ngOnInit(): void {}\n  signinForm = new FormGroup({\n    inputEmail: new FormControl('', [Validators.required, Validators.email]),\n    inputPassword: new FormControl('', [\n      Validators.required,\n      Validators.minLength(8),\n      Validators.maxLength(14),\n    ]),\n  });\n  isUserValid: boolean = false;\n  Submitted() {\n    this.signin\n      .signinUser([\n        this.signinForm.value.inputEmail as string,\n        this.signinForm.value.inputPassword as string,\n      ])\n      .subscribe(\n        (resp) => {\n          alert('Account Created ');\n          this.router.navigate(['pages/home']);\n        },\n        (error) => {\n          alert('Unsuccesful');\n        }\n      );\n  }\n\n  get Email(): FormControl {\n    return this.signinForm.get('inputEmail') as FormControl;\n  }\n  get PWD(): FormControl {\n    return this.signinForm.get('inputPassword') as FormControl;\n  }\n}\n","\n            <div class=\"container pt-5 \">\n                <div class=\"mx-auto border p-4 bg-light shadow-lg  \" style=\"width: 400px; \">\n              <h2 ><b>Sign Up</b></h2>\n              <h6>It's quick and easy.</h6>\n              <br>\n              <form [formGroup]=\"signinForm\" (ngSubmit)=\"Submitted()\">\n                <div class=\"mb-3\">\n                    <input type=\"email\" class=\"form-control\" id=\"inputEmail\" placeholder=\"Enter your Email\" formControlName=\"inputEmail\" required>\n                    <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['required'] && (Email.dirty || Email.touched)\">\n                        Email is required\n                    </div>\n                    <div class=\"form-text text-danger\"*ngIf=\"Email.errors?.['email'] && (Email.dirty || Email.touched)\">\n                      Email is invalid\n                  </div>\n                  </div>\n                  <div class=\"mb-3\">\n                    <input type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Enter your Password\" formControlName=\"inputPassword\"  required>\n                    <div class=\"form-text text-danger\"  *ngIf=\"PWD.errors?.['required'] && (PWD.dirty || PWD.touched)\">\n                      Password is required\n                  </div>\n                  <div class=\"form-text text-danger\" *ngIf=\"PWD.errors?.['minlength'] || PWD.errors?.['maxlength'] && (Email.dirty || Email.touched)\">\n                    Password should be at least  8 and as long as 14 characters long\n                </div>\n                  </div>\n                  <div class=\"text-center\">\n                    <button type=\"submit\" [disabled]=\"signinForm.invalid\" class=\"btn btn-success\">Sign Up</button>\n                  </div>\n                  <hr>\n                <p class=\"text-center\">Have already an account? <a [routerLink]=\"['']\"\n                  class=\"fw-bold text-body\"><u>Log in</u></a></p>\n              </form>\n                </div>\n            </div>\n   \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}