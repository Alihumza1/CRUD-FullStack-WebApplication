{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nlet HomeComponent = class HomeComponent {\n  constructor(route, http, _router, authService) {\n    this.route = route;\n    this.http = http;\n    this._router = _router;\n    this.authService = authService;\n    this.dtOptions = {};\n  }\n  ngOnInit() {\n    this.fetchData();\n  }\n  fetchData() {\n    this.dtOptions = {\n      processing: true,\n      serverSide: true,\n      paging: true,\n      searching: true,\n      ordering: true,\n      ajax: (dataTablesParameters, callback) => {\n        this.http.post('https://localhost:7149/api/Employee', dataTablesParameters).subscribe(Response => {\n          callback({\n            recordsTotal: Response.recordsTotal,\n            recordsFiltered: Response.recordsFiltered,\n            data: Response.data\n          });\n        });\n      },\n      columns: [{\n        title: 'Id',\n        data: 'id',\n        visible: false\n      }, {\n        title: 'Name',\n        data: 'name'\n      }, {\n        title: 'DepId',\n        data: 'depId',\n        visible: false\n      }, {\n        title: 'Cnic',\n        data: 'cnic'\n      }, {\n        title: 'Age',\n        data: 'age'\n      }, {\n        title: 'Salary',\n        data: 'salary'\n      }, {\n        title: 'Actions',\n        data: null,\n        render: function () {\n          return '<button class = \"btn btn-info edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\n        }\n      }],\n      columnDefs: [{\n        targets: [1],\n        orderable: true,\n        searchable: true\n      }, {\n        targets: [5],\n        orderable: true\n      }, {\n        targets: '_all',\n        orderable: false,\n        searchable: false\n      }],\n      rowCallback: (row, data, index) => {\n        $('.edit', row).on('click', () => {\n          this._router.navigate(['pages/edit'], {\n            queryParams: {\n              id: data.id\n            }\n          });\n        });\n        $('.delete', row).on('click', () => {\n          const id = data.id;\n          const name = data.name;\n          const confirmDelete = confirm('Are you sure you want to delete the Record of ' + name);\n          if (confirmDelete) {\n            this.authService.deleteEmployee(id).subscribe(() => {\n              this.dtElement.dtInstance.then(dtInstance => {\n                dtInstance.ajax.reload();\n              });\n            }, error => {\n              alert('Unsuccessful');\n            });\n          }\n        });\n        return row;\n      }\n    };\n  }\n};\n__decorate([ViewChild(DataTableDirective, {\n  static: false\n})], HomeComponent.prototype, \"dtElement\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","DataTableDirective","HomeComponent","constructor","route","http","_router","authService","ngOnInit","fetchData","dtOptions","processing","serverSide","paging","searching","ordering","ajax","dataTablesParameters","callback","post","subscribe","Response","recordsTotal","recordsFiltered","data","columns","title","visible","render","columnDefs","targets","orderable","searchable","rowCallback","row","index","$","on","navigate","queryParams","id","name","confirmDelete","confirm","deleteEmployee","dtElement","dtInstance","then","reload","error","alert","__decorate","static","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Service } from 'src/app/services/service';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement!: DataTableDirective;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private http: HttpClient,\r\n    private _router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  dtOptions: DataTables.Settings = {};\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n  }\r\n  fetchData() {\r\n    this.dtOptions = {\r\n      processing: true,\r\n      serverSide: true,\r\n      paging: true,\r\n      searching: true,\r\n      ordering: true,\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        this.http\r\n          .post('https://localhost:7149/api/Employee', dataTablesParameters)\r\n          .subscribe((Response: any) => {\r\n            callback({\r\n              recordsTotal: Response.recordsTotal,\r\n              recordsFiltered: Response.recordsFiltered,\r\n              data: Response.data,\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        { title: 'Id', data: 'id', visible: false },\r\n        { title: 'Name', data: 'name' },\r\n        { title: 'DepId', data: 'depId', visible: false },\r\n        { title: 'Cnic', data: 'cnic' },\r\n        { title: 'Age', data: 'age' },\r\n        { title: 'Salary', data: 'salary' },\r\n        {\r\n          title: 'Actions',\r\n          data: null,\r\n          render: function () {\r\n            return '<button class = \"btn btn-info edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\r\n          },\r\n        },\r\n      ],\r\n      columnDefs: [\r\n        {\r\n          targets: [1],\r\n          orderable: true,\r\n          searchable: true,\r\n        },\r\n        {\r\n          targets: [5],\r\n          orderable: true,\r\n        },\r\n        {\r\n          targets: '_all',\r\n          orderable: false,\r\n          searchable: false,\r\n        },\r\n      ],\r\n      rowCallback: (row: Node, data: any, index: number) => {\r\n        $('.edit', row).on('click', () => {\r\n          this._router.navigate(['pages/edit'], {\r\n            queryParams: { id: data.id },\r\n          });\r\n        });\r\n        $('.delete', row).on('click', () => {\r\n          const id = data.id;\r\n          const name = data.name;\r\n          const confirmDelete = confirm(\r\n            'Are you sure you want to delete the Record of ' + name\r\n          );\r\n          if (confirmDelete) {\r\n            this.authService.deleteEmployee(id).subscribe(\r\n              () => {\r\n                this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                  dtInstance.ajax.reload();\r\n                });\r\n              },\r\n              (error) => {\r\n                alert('Unsuccessful');\r\n              }\r\n            );\r\n          }\r\n        });\r\n        return row;\r\n      },\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}