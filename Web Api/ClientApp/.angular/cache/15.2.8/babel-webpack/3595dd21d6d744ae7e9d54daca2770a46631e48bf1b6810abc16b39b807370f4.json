{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction AddComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Name is required and should only contain alphabets. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Name should be 1 and as long as 14 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_option_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r2.Employee.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.Employee.name);\n  }\n}\nfunction AddComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Department is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const department_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", department_r13.depid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(department_r13.name);\n  }\n}\nfunction AddComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Department is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Cnic number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Cnic should be 13 numbers long (without dashes) \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Age is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Age should be atleast 18 to 59 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Salary is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵtext(1, \" Salary should be 10000 to 100000 \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/pages/home\"];\n};\nexport class AddComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.departments = [];\n    this.employee = [];\n    this.addEmployee = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      manager: new FormControl('', [Validators.required]),\n      cnic: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.minLength(13), Validators.maxLength(13)]),\n      age: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.min(18), Validators.max(59)]),\n      salary: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.min(10000), Validators.max(100000)])\n    });\n  }\n  ngOnInit() {\n    this.service.getAllDepartments().subscribe(data => {\n      this.departments = data;\n    });\n    this.service.getAllEmployee().subscribe(data => {\n      this.employee = data;\n    });\n  }\n  Submit() {\n    const employee = {\n      name: this.addEmployee.get('name')?.value,\n      manager: this.addEmployee.get('manager')?.value,\n      age: parseInt(this.addEmployee.get('age')?.value || ''),\n      salary: parseInt(this.addEmployee.get('salary')?.value || ''),\n      cnic: this.addEmployee.get('cnic')?.value,\n      depId: parseInt(this.addEmployee.get('depid')?.value || '')\n    };\n    this.service.addEmployee(employee).subscribe(resp => {\n      this.router.navigate(['pages/home']);\n    }, error => {\n      alert('Unsuccessful !');\n    });\n  }\n  get name() {\n    return this.addEmployee.get('name');\n  }\n  get manager() {\n    return this.addEmployee.get('manager');\n  }\n  get depid() {\n    return this.addEmployee.get('depid');\n  }\n  get cnic() {\n    return this.addEmployee.get('cnic');\n  }\n  get age() {\n    return this.addEmployee.get('age');\n  }\n  get salary() {\n    return this.addEmployee.get('salary');\n  }\n}\nAddComponent.ɵfac = function AddComponent_Factory(t) {\n  return new (t || AddComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.Router));\n};\nAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddComponent,\n  selectors: [[\"app-add\"]],\n  decls: 53,\n  vars: 15,\n  consts: [[1, \"container\"], [1, \"mx-auto\", \"border\", \"p-3\", \"bg-light\", \"shadow-lg\", 2, \"width\", \"400px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter your Name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"manager\", 1, \"form-label\"], [\"id\", \"manager\", \"formControlName\", \"manager\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForEmployee\"], [\"for\", \"depid\", 1, \"form-label\"], [\"id\", \"depid\", \"formControlName\", \"depid\", \"required\", \"\", 1, \"form-control\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"cnic\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"cnic\", \"placeholder\", \"Enter your cnic number\", \"formControlName\", \"cnic\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"age\", 1, \"form-label\"], [\"id\", \"age\", \"placeholder\", \"Enter your Age\", \"formControlName\", \"age\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"salary\", 1, \"form-label\"], [\"id\", \"salary\", \"placeholder\", \"Enter your Salary\", \"formControlName\", \"salary\", \"required\", \"\", 1, \"form-control\"], [1, \"btn-group\", \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [1, \"form-text\", \"text-danger\"], [3, \"value\"]],\n  template: function AddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\")(3, \"b\");\n      i0.ɵɵtext(4, \"Create\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function AddComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.Submit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵtemplate(10, AddComponent_div_10_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(11, AddComponent_div_11_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Manager:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 8)(16, \"option\", 9);\n      i0.ɵɵtext(17, \"Select Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(18, AddComponent_option_18_Template, 2, 2, \"option\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(19, AddComponent_div_19_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 3)(21, \"label\", 11);\n      i0.ɵɵtext(22, \"Department:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"select\", 12)(24, \"option\", 9);\n      i0.ɵɵtext(25, \"Select Department\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(26, AddComponent_option_26_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, AddComponent_div_27_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 3)(29, \"label\", 14);\n      i0.ɵɵtext(30, \"Cnic:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"input\", 15);\n      i0.ɵɵtemplate(32, AddComponent_div_32_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(33, AddComponent_div_33_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 3)(35, \"label\", 16);\n      i0.ɵɵtext(36, \"Age:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 17);\n      i0.ɵɵtemplate(38, AddComponent_div_38_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(39, AddComponent_div_39_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"div\", 3)(41, \"label\", 18);\n      i0.ɵɵtext(42, \"Salary:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(43, \"input\", 19);\n      i0.ɵɵtemplate(44, AddComponent_div_44_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(45, AddComponent_div_45_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"br\");\n      i0.ɵɵelementStart(47, \"div\", 20)(48, \"button\", 21);\n      i0.ɵɵtext(49, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(50, \" \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(51, \"button\", 22);\n      i0.ɵɵtext(52, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.addEmployee);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.name.touched || ctx.name.dirty) && ((ctx.name.errors == null ? null : ctx.name.errors.required) || (ctx.name.errors == null ? null : ctx.name.errors.pattern)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.name.errors == null ? null : ctx.name.errors[\"minlength\"]) || (ctx.name.errors == null ? null : ctx.name.errors[\"maxlength\"]) && (ctx.name.dirty || ctx.name.touched));\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", (ctx.depid.errors == null ? null : ctx.depid.errors.required) && (ctx.depid.dirty || ctx.depid.touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.depid.errors == null ? null : ctx.depid.errors.required) && (ctx.depid.dirty || ctx.depid.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.cnic.touched || ctx.cnic.dirty) && ((ctx.cnic.errors == null ? null : ctx.cnic.errors.required) || (ctx.cnic.errors == null ? null : ctx.cnic.errors.pattern)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.cnic.errors == null ? null : ctx.cnic.errors[\"minlength\"]) || (ctx.cnic.errors == null ? null : ctx.cnic.errors[\"maxlength\"]) && (ctx.cnic.dirty || ctx.cnic.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.age.touched || ctx.age.dirty) && ((ctx.age.errors == null ? null : ctx.age.errors.required) || (ctx.age.errors == null ? null : ctx.age.errors.pattern)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.age.errors == null ? null : ctx.age.errors[\"min\"]) || (ctx.age.errors == null ? null : ctx.age.errors[\"max\"]) && (ctx.age.dirty || ctx.age.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.salary.touched || ctx.salary.dirty) && ((ctx.salary.errors == null ? null : ctx.salary.errors.required) || (ctx.salary.errors == null ? null : ctx.salary.errors.pattern)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.salary.errors == null ? null : ctx.salary.errors[\"min\"]) || (ctx.salary.errors == null ? null : ctx.salary.errors[\"max\"]) && (ctx.salary.dirty || ctx.salary.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.addEmployee.invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(14, _c0));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink, i4.NgForOf, i4.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","AddComponent","constructor","service","router","name","required","pattern","minLength","maxLength","depid","manager","cnic","age","min","max","salary","ngOnInit","getAllDepartments","subscribe","data","departments","getAllEmployee","employee","Submit","addEmployee","get","value","parseInt","depId","resp","navigate","error","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\add\\add.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\add\\add.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Service } from 'src/app/services/service';\nimport {  Router } from '@angular/router';\nimport { createEmployee } from 'src/app/models/employeeModel';\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css'],\n})\nexport class AddComponent implements OnInit {\n  constructor(\n    private service: Service,\n    private router: Router,\n  ) {}\n  departments: any[] = [];\n  employee: any[] = [];\n  ngOnInit(): void {\n    this.service.getAllDepartments().subscribe((data: any[]) => {\n      this.departments = data;\n    });\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employee = data;\n    });\n  }\n  addEmployee = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    manager: new FormControl('', [Validators.required]),\n    cnic: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.minLength(13),\n      Validators.maxLength(13),\n    ]),\n    age: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.min(18),\n      Validators.max(59),\n    ]),\n    salary: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.min(10000),\n      Validators.max(100000),\n    ]),\n  });\n  Submit(): void {\n    const employee: createEmployee = {\n      name: this.addEmployee.get('name')?.value as string,\n      manager: this.addEmployee.get('manager')?.value as string,\n      age: parseInt(this.addEmployee.get('age')?.value || ''),\n      salary: parseInt(this.addEmployee.get('salary')?.value || ''),\n      cnic: this.addEmployee.get('cnic')?.value as string,\n      depId: parseInt(this.addEmployee.get('depid')?.value || ''),\n    };\n    this.service.addEmployee(employee).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/home']);\n      },\n      (error) => {\n        alert('Unsuccessful !');\n      }\n    );\n  }\n  get name(): FormControl {\n    return this.addEmployee.get('name') as FormControl;\n  }\n  get manager(): FormControl {\n    return this.addEmployee.get('manager') as FormControl;\n  }\n  get depid(): FormControl {\n    return this.addEmployee.get('depid') as FormControl;\n  }\n  get cnic(): FormControl {\n    return this.addEmployee.get('cnic') as FormControl;\n  }\n  get age(): FormControl {\n    return this.addEmployee.get('age') as FormControl;\n  }\n  get salary(): FormControl {\n    return this.addEmployee.get('salary') as FormControl;\n  }\n}\n","<div class=\"container \">\n    <div class=\"mx-auto border p-3 bg-light shadow-lg\" style=\"width: 400px; \">\n  <h2><b>Create</b></h2>\n  <form [formGroup]=\"addEmployee\" (ngSubmit)=\"Submit()\">\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"name\">Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter your Name\" formControlName=\"name\"  required>\n        <div class=\"form-text text-danger\"  *ngIf=\"(name.touched || name.dirty) && (name.errors?.required || name.errors?.pattern)\">\n          Name is required and should only contain alphabets.\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"name.errors?.['minlength'] || name.errors?.['maxlength'] && (name.dirty || name.touched       )\">\n        Name should be 1 and as long as 14 characters long\n    </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"manager\">Manager:</label>\n        <select class=\"form-control\" id=\"manager\" formControlName=\"manager\" required>\n          <option value=\"\">Select Manager</option>\n          <option *ngFor=\"let  of Employee\" [value]=\"Employee.name\">{{ Employee.name }}</option>\n        </select>\n        <div class=\"form-text text-danger\" *ngIf=\"depid.errors?.required && (depid.dirty || depid.touched)\">\n          Department is required\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"depid\">Department:</label>\n        <select class=\"form-control\" id=\"depid\" formControlName=\"depid\" required>\n          <option value=\"\">Select Department</option>\n          <option *ngFor=\"let department of departments\" [value]=\"department.depid\">{{ department.name }}</option>\n        </select>\n        <div class=\"form-text text-danger\" *ngIf=\"depid.errors?.required && (depid.dirty || depid.touched)\">\n          Department is required\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"cnic\">Cnic:</label>\n        <input type=\"text\" class=\"form-control\" id=\"cnic\" placeholder=\"Enter your cnic number\" formControlName=\"cnic\"  required>\n        <div class=\"form-text text-danger\"   *ngIf=\"(cnic.touched || cnic.dirty) && (cnic.errors?.required || cnic.errors?.pattern)\">\n          Cnic number is required\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"cnic.errors?.['minlength'] || cnic.errors?.['maxlength'] && (cnic.dirty || cnic.touched)\">\n        Cnic should be 13 numbers long (without dashes)\n    </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"age\">Age:</label>\n        <input  class=\"form-control\" id=\"age\" placeholder=\"Enter your Age\" formControlName=\"age\"  required>\n        <div class=\"form-text text-danger\"   *ngIf=\"(age.touched || age.dirty) && (age.errors?.required || age.errors?.pattern)\">\n          Age is required\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"age.errors?.['min'] || age.errors?.['max'] && (age.dirty || age.touched)\">\n      Age should be atleast 18 to 59\n    </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"salary\">Salary:</label>\n        <input  class=\"form-control\" id=\"salary\" placeholder=\"Enter your Salary\" formControlName=\"salary\"  required>\n        <div class=\"form-text text-danger\"   *ngIf=\"(salary.touched || salary.dirty) && (salary.errors?.required || salary.errors?.pattern)\">\n          Salary is required\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"salary.errors?.['min'] || salary.errors?.['max'] && (salary.dirty || salary.touched)\">\n      Salary should be 10000 to 100000\n    </div>\n      </div>\n      <br>\n      <div class=\"btn-group d-flex justify-content-center\" >\n        <button type=\"submit\" [disabled]=\"addEmployee.invalid\" class=\"btn btn-success\">Submit</button>\n        &nbsp; &nbsp; <button class=\"btn btn-primary\" [routerLink]=\"['/pages/home']\">Cancel</button>\n      </div>\n  </form>\n    </div>\n</div>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}