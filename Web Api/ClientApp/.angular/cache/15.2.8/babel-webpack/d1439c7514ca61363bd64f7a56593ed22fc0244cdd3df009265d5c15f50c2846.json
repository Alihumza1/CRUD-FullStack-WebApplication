{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"angular-datatables\";\nconst _c0 = function () {\n  return [\"/pages/add\"];\n};\nexport class HomeComponent {\n  constructor(http, _router, authService) {\n    this.http = http;\n    this._router = _router;\n    this.authService = authService;\n    this.dtOptions = {};\n  }\n  ngOnInit() {\n    this.fetchData();\n  }\n  fetchData() {\n    this.dtOptions = {\n      processing: true,\n      serverSide: true,\n      paging: true,\n      searching: true,\n      ordering: true,\n      ajax: (dataTablesParameters, callback) => {\n        this.http.post('https://localhost:7149/api/Employee/all-Employees', dataTablesParameters).subscribe(Response => {\n          callback({\n            recordsTotal: Response.recordsTotal,\n            recordsFiltered: Response.recordsFiltered,\n            data: Response.data\n          });\n        });\n      },\n      columns: [{\n        title: 'Id',\n        data: 'id',\n        visible: false\n      }, {\n        title: 'Name',\n        data: 'name'\n      }, {\n        title: 'DepId',\n        data: 'depId',\n        visible: false\n      }, {\n        title: 'Cnic',\n        data: 'cnic'\n      }, {\n        title: 'Age',\n        data: 'age'\n      }, {\n        title: 'Salary',\n        data: 'salary'\n      }, {\n        title: 'Actions',\n        data: null,\n        render: function () {\n          return '<button class = \"btn btn-info edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\n        }\n      }],\n      columnDefs: [{\n        targets: [1],\n        orderable: true,\n        searchable: true\n      }, {\n        targets: '_all',\n        orderable: false,\n        searchable: false\n      }],\n      rowCallback: (row, data, index) => {\n        const self = this;\n        $('.edit', row).off('click');\n        $('.edit', row).on('click', () => {\n          this._router.navigate(['pages/edit'], {\n            queryParams: {\n              id: data.id\n            }\n          });\n        });\n        $('.delete', row).off('click');\n        $('.delete', row).on('click', () => {\n          const id = data.id;\n          const confirmDelete = confirm('Are you sure you want to delete item with ID: ' + id);\n          if (confirmDelete) {\n            this.authService.deleteEmployee(id).subscribe(resp => {\n              this._router.navigate(['pages/home']);\n            }, error => {\n              alert('Unsuccessful');\n            });\n          }\n        });\n        return row;\n      }\n    };\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"id\", \"myTable\", \"datatable\", \"\", 1, \"table\", \"table-bordered\", 3, \"dtOptions\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Add Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"br\")(3, \"br\")(4, \"table\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions);\n    }\n  },\n  dependencies: [i2.RouterLink, i4.DataTableDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["HomeComponent","constructor","http","_router","authService","ngOnInit","fetchData","dtOptions","processing","serverSide","paging","searching","ordering","ajax","dataTablesParameters","callback","post","subscribe","Response","recordsTotal","recordsFiltered","data","columns","title","visible","render","columnDefs","targets","orderable","searchable","rowCallback","row","index","self","$","off","on","navigate","queryParams","id","confirmDelete","confirm","deleteEmployee","resp","error","alert","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(private http: HttpClient, private _router: Router,private authService:AuthService) {}\r\n  dtOptions: DataTables.Settings = {};\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n  }\r\n  fetchData() {\r\n    this.dtOptions = {\r\n      processing: true,\r\n      serverSide: true,\r\n      paging: true,\r\n      searching: true,\r\n      ordering: true,\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        this.http\r\n          .post(\r\n            'https://localhost:7149/api/Employee/all-Employees',\r\n            dataTablesParameters\r\n          )\r\n          .subscribe((Response: any) => {\r\n            callback({\r\n              recordsTotal: Response.recordsTotal,\r\n              recordsFiltered: Response.recordsFiltered,\r\n              data: Response.data,\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        { title: 'Id', data: 'id', visible: false },\r\n        { title: 'Name', data: 'name' },\r\n        { title: 'DepId', data: 'depId', visible: false },\r\n        { title: 'Cnic', data: 'cnic' },\r\n        { title: 'Age', data: 'age' },\r\n        { title: 'Salary', data: 'salary' },\r\n        { title:'Actions',\r\n          data: null,\r\n          render:function () {\r\n            return '<button class = \"btn btn-info edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>'\r\n          },\r\n        },\r\n      ],\r\n      columnDefs: [\r\n        {\r\n          targets: [1],\r\n          orderable: true,\r\n          searchable: true,\r\n        },\r\n        {\r\n          targets: '_all',\r\n          orderable: false,\r\n          searchable: false,\r\n        },\r\n      ],\r\n      rowCallback: (row: Node, data: any, index: number) => {\r\n        const self = this;\r\n        $('.edit', row).off('click');\r\n        $('.edit', row).on('click', () => {\r\n          \r\n          this._router.navigate(['pages/edit'], { queryParams: { id: data.id } });\r\n        });\r\n        $('.delete', row).off('click');\r\n        $('.delete', row).on('click', () => {\r\n          const id = data.id;\r\n          const confirmDelete = confirm('Are you sure you want to delete item with ID: ' + id);\r\n\r\n          if (confirmDelete) {\r\n    \r\n          this.authService.deleteEmployee(id).subscribe(\r\n            (resp) => {\r\n              \r\n              this._router.navigate(['pages/home']);\r\n            },\r\n            (error) => {\r\n              alert('Unsuccessful');\r\n            }\r\n          );\r\n        }\r\n        });\r\n        return row;\r\n      }\r\n    };\r\n  };\r\n  \r\n}\r\n","<button class=\"btn btn-primary\"  [routerLink]=\"['/pages/add']\">Add Employee</button>\r\n<br>\r\n<br>\r\n\r\n<table id=\"myTable\" datatable [dtOptions]=\"dtOptions\"  class=\"table  table-bordered\"></table>\r\n\r\n\r\n\r\n  \r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}