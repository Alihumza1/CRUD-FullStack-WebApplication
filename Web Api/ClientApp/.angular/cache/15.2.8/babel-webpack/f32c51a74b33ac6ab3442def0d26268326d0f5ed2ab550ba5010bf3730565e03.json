{"ast":null,"code":"import { DataTableDirective } from 'angular-datatables';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/logging.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"src/app/services/service\";\nimport * as i5 from \"angular-datatables\";\nconst _c0 = function () {\n  return [\"/pages/add\"];\n};\nexport class HomeComponent {\n  constructor(route, loggingService, http, _router, service) {\n    this.route = route;\n    this.loggingService = loggingService;\n    this.http = http;\n    this._router = _router;\n    this.service = service;\n    this.dtOptions = {};\n  }\n  ngOnInit() {\n    this.fetchData();\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.LoggingService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.Service));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  viewQuery: function HomeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DataTableDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n    }\n  },\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"id\", \"myTable\", \"datatable\", \"\", 1, \"table\", \"table-bordered\", \"shadow-lg\", 3, \"dtOptions\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Add Employee\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"br\")(3, \"br\")(4, \"table\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions);\n    }\n  },\n  dependencies: [i1.RouterLink, i5.DataTableDirective],\n  encapsulation: 2\n});\nfetchData();\n{\n  this.dtOptions = {\n    processing: true,\n    serverSide: true,\n    paging: true,\n    searching: true,\n    ordering: true,\n    ajax: (dataTablesParameters, callback) => {\n      this.http.post('https://localhost:7149/api/Employee', dataTablesParameters).subscribe(Response => {\n        callback({\n          recordsTotal: Response.recordsTotal,\n          recordsFiltered: Response.recordsFiltered,\n          data: Response.data\n        });\n      });\n    },\n    columns: [{\n      title: 'Id',\n      data: 'id',\n      visible: false\n    }, {\n      title: 'Name',\n      data: 'name'\n    }, {\n      title: 'Manager',\n      data: 'manager'\n    }, {\n      title: 'DepId',\n      data: 'depId',\n      visible: false\n    }, {\n      title: 'Cnic',\n      data: 'cnic'\n    }, {\n      title: 'Age',\n      data: 'age'\n    }, {\n      title: 'Salary',\n      data: 'salary'\n    }, {\n      title: 'Actions',\n      data: null,\n      render: function () {\n        return '<button class = \"btn btn-success edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\n      }\n    }],\n    columnDefs: [{\n      targets: [1],\n      orderable: true,\n      searchable: true\n    }, {\n      targets: [5],\n      orderable: true\n    }, {\n      targets: '_all',\n      orderable: false,\n      searchable: false\n    }],\n    rowCallback: (row, data, index) => {\n      const editButton = row.querySelector('.edit');\n      if (editButton) {\n        editButton.addEventListener('click', () => {\n          this._router.navigate(['pages/edit'], {\n            queryParams: {\n              id: data.id\n            }\n          });\n        });\n      }\n      const deleteButton = row.querySelector('.delete');\n      if (deleteButton) {\n        deleteButton.addEventListener('click', () => {\n          const id = data.id;\n          const name = data.name;\n          const confirmDelete = confirm('Are you sure you want to delete the Record of ' + name);\n          if (confirmDelete) {\n            this.service.deleteEmployee(id).subscribe(() => {\n              this.dtElement.dtInstance.then(dtInstance => {\n                dtInstance.ajax.reload();\n              });\n            }, error => {\n              alert('Unsuccessful not deleted');\n            });\n          }\n        });\n      }\n      return row;\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["DataTableDirective","HomeComponent","constructor","route","loggingService","http","_router","service","ngOnInit","fetchData","selectors","viewQuery","i0","dtOptions","processing","serverSide","paging","searching","ordering","ajax","dataTablesParameters","callback","post","subscribe","Response","recordsTotal","recordsFiltered","data","columns","title","visible","render","columnDefs","targets","orderable","searchable","rowCallback","row","index","editButton","querySelector","addEventListener","navigate","queryParams","id","deleteButton","name","confirmDelete","confirm","deleteEmployee","dtElement","dtInstance","then","reload","error","alert"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\Employees\\home\\home.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\Employees\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Service } from 'src/app/services/service';\r\nimport { LoggingService } from 'src/app/services/logging.service';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement!: DataTableDirective;\r\n  constructor(\r\n   \r\n    private route: ActivatedRoute,\r\n   private loggingService: LoggingService,\r\n    private http: HttpClient,\r\n    private _router: Router,\r\n    private service: Service\r\n  ) {}\r\n  dtOptions: DataTables.Settings = {};\r\n  ngOnInit(): void {\r\n    \r\n    this.fetchData();\r\n    \r\n    \r\n  }\r\n}\r\n  fetchData() {\r\n    this.dtOptions = {\r\n      processing: true,\r\n      serverSide: true,\r\n      paging: true,\r\n      searching: true,\r\n      ordering: true,\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        this.http\r\n          .post('https://localhost:7149/api/Employee', dataTablesParameters)\r\n          .subscribe((Response: any) => {\r\n            callback({\r\n              recordsTotal: Response.recordsTotal,\r\n              recordsFiltered: Response.recordsFiltered,\r\n              data: Response.data,\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        \r\n        { title: 'Id', data: 'id', visible: false },\r\n        { title: 'Name', data: 'name' },\r\n        { title: 'Manager', data: 'manager' },\r\n        { title: 'DepId', data: 'depId', visible: false },\r\n        { title: 'Cnic', data: 'cnic' },\r\n        { title: 'Age', data: 'age' },\r\n        { title: 'Salary', data: 'salary' },\r\n        {\r\n          title: 'Actions',\r\n          data: null,\r\n          render: function () {\r\n            return '<button class = \"btn btn-success edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\r\n          },\r\n        },\r\n      ],\r\n      columnDefs: [\r\n        {\r\n          targets: [1],\r\n          orderable: true,\r\n          searchable: true,\r\n        },\r\n        {\r\n          targets: [5],\r\n          orderable: true,\r\n        },\r\n        {\r\n          targets: '_all',\r\n          orderable: false,\r\n          searchable: false,\r\n        },\r\n      ],\r\n      rowCallback: (row: Node, data: any, index: number) => {\r\n        const editButton = (row as HTMLElement).querySelector('.edit');\r\n        if (editButton) {\r\n          editButton.addEventListener('click', () => {\r\n            this._router.navigate(['pages/edit'], {\r\n              queryParams: { id: data.id },\r\n            });\r\n          });\r\n        }\r\n        const deleteButton = (row as HTMLElement).querySelector('.delete');\r\n        if (deleteButton) {\r\n          deleteButton.addEventListener('click', () => {\r\n            const id = data.id;\r\n            const name = data.name;\r\n            const confirmDelete = confirm('Are you sure you want to delete the Record of ' + name);\r\n            if (confirmDelete) {\r\n              this.service.deleteEmployee(id).subscribe(\r\n                () => {\r\n                  this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                   \r\n                    dtInstance.ajax.reload();\r\n                  });\r\n                },\r\n                (error) => {\r\n                  alert('Unsuccessful not deleted');\r\n                }\r\n              );\r\n            }\r\n          });\r\n        }\r\n        \r\n        return row;\r\n        \r\n      },\r\n    };\r\n  }\r\n}\r\n","<button class=\"btn btn-primary\"  [routerLink]=\"['/pages/add']\">Add Employee</button>\r\n<br>\r\n<br>\r\n<table id=\"myTable\" datatable [dtOptions]=\"dtOptions\"  class=\"table  table-bordered  shadow-lg\"></table>\r\n\r\n\r\n\r\n  \r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}