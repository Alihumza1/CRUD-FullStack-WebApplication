{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nlet HomeComponent = class HomeComponent {\n  constructor(route, logger, http, _router, service) {\n    this.route = route;\n    this.logger = logger;\n    this.http = http;\n    this._router = _router;\n    this.service = service;\n    this.dtOptions = {};\n  }\n  ngOnInit() {\n    try {\n      throw new Error('This is a simulated error.');\n      this.fetchData();\n    } catch (error) {\n      this.logger.error(\"An error occured \", error);\n    }\n  }\n  fetchData() {\n    this.dtOptions = {\n      processing: true,\n      serverSide: true,\n      paging: true,\n      searching: true,\n      ordering: true,\n      ajax: (dataTablesParameters, callback) => {\n        this.http.post('https://localhost:7149/api/Employee', dataTablesParameters).subscribe(Response => {\n          callback({\n            recordsTotal: Response.recordsTotal,\n            recordsFiltered: Response.recordsFiltered,\n            data: Response.data\n          });\n        });\n      },\n      columns: [{\n        title: 'Id',\n        data: 'id',\n        visible: false\n      }, {\n        title: 'Name',\n        data: 'name'\n      }, {\n        title: 'Manager',\n        data: 'manager'\n      }, {\n        title: 'DepId',\n        data: 'depId',\n        visible: false\n      }, {\n        title: 'Cnic',\n        data: 'cnic'\n      }, {\n        title: 'Age',\n        data: 'age'\n      }, {\n        title: 'Salary',\n        data: 'salary'\n      }, {\n        title: 'Actions',\n        data: null,\n        render: function () {\n          return '<button class = \"btn btn-success edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\n        }\n      }],\n      columnDefs: [{\n        targets: [1],\n        orderable: true,\n        searchable: true\n      }, {\n        targets: [5],\n        orderable: true\n      }, {\n        targets: '_all',\n        orderable: false,\n        searchable: false\n      }],\n      rowCallback: (row, data, index) => {\n        const editButton = row.querySelector('.edit');\n        if (editButton) {\n          editButton.addEventListener('click', () => {\n            this._router.navigate(['pages/edit'], {\n              queryParams: {\n                id: data.id\n              }\n            });\n          });\n        }\n        const deleteButton = row.querySelector('.delete');\n        if (deleteButton) {\n          deleteButton.addEventListener('click', () => {\n            const id = data.id;\n            const name = data.name;\n            const confirmDelete = confirm('Are you sure you want to delete the Record of ' + name);\n            if (confirmDelete) {\n              this.service.deleteEmployee(id).subscribe(() => {\n                this.dtElement.dtInstance.then(dtInstance => {\n                  dtInstance.ajax.reload();\n                });\n              }, error => {\n                alert('Unsuccessful not deleted');\n              });\n            }\n          });\n        }\n        return row;\n      }\n    };\n  }\n};\n__decorate([ViewChild(DataTableDirective, {\n  static: false\n})], HomeComponent.prototype, \"dtElement\", void 0);\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","DataTableDirective","HomeComponent","constructor","route","logger","http","_router","service","ngOnInit","Error","fetchData","error","dtOptions","processing","serverSide","paging","searching","ordering","ajax","dataTablesParameters","callback","post","subscribe","Response","recordsTotal","recordsFiltered","data","columns","title","visible","render","columnDefs","targets","orderable","searchable","rowCallback","row","index","editButton","querySelector","addEventListener","navigate","queryParams","id","deleteButton","name","confirmDelete","confirm","deleteEmployee","dtElement","dtInstance","then","reload","alert","__decorate","static","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\Employees\\home\\home.component.ts"],"sourcesContent":["import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { DataTableDirective } from 'angular-datatables';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Service } from 'src/app/services/service';\r\nimport { LoggingService } from './logging.service';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  @ViewChild(DataTableDirective, { static: false })\r\n  dtElement!: DataTableDirective;\r\n  constructor(\r\n   \r\n    private route: ActivatedRoute,\r\n    private logger: NGXLogger,\r\n    private http: HttpClient,\r\n    private _router: Router,\r\n    private service: Service\r\n  ) {}\r\n  dtOptions: DataTables.Settings = {};\r\n  ngOnInit(): void {\r\n    try{\r\n      throw new Error('This is a simulated error.');\r\n    this.fetchData();\r\n   \r\n    }\r\n    catch(error){\r\n      this.logger.error(\"An error occured \",error)\r\n    }\r\n  }\r\n  fetchData() {\r\n    this.dtOptions = {\r\n      processing: true,\r\n      serverSide: true,\r\n      paging: true,\r\n      searching: true,\r\n      ordering: true,\r\n      ajax: (dataTablesParameters: any, callback) => {\r\n        this.http\r\n          .post('https://localhost:7149/api/Employee', dataTablesParameters)\r\n          .subscribe((Response: any) => {\r\n            callback({\r\n              recordsTotal: Response.recordsTotal,\r\n              recordsFiltered: Response.recordsFiltered,\r\n              data: Response.data,\r\n            });\r\n          });\r\n      },\r\n      columns: [\r\n        \r\n        { title: 'Id', data: 'id', visible: false },\r\n        { title: 'Name', data: 'name' },\r\n        { title: 'Manager', data: 'manager' },\r\n        { title: 'DepId', data: 'depId', visible: false },\r\n        { title: 'Cnic', data: 'cnic' },\r\n        { title: 'Age', data: 'age' },\r\n        { title: 'Salary', data: 'salary' },\r\n        {\r\n          title: 'Actions',\r\n          data: null,\r\n          render: function () {\r\n            return '<button class = \"btn btn-success edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\r\n          },\r\n        },\r\n      ],\r\n      columnDefs: [\r\n        {\r\n          targets: [1],\r\n          orderable: true,\r\n          searchable: true,\r\n        },\r\n        {\r\n          targets: [5],\r\n          orderable: true,\r\n        },\r\n        {\r\n          targets: '_all',\r\n          orderable: false,\r\n          searchable: false,\r\n        },\r\n      ],\r\n      rowCallback: (row: Node, data: any, index: number) => {\r\n        const editButton = (row as HTMLElement).querySelector('.edit');\r\n        if (editButton) {\r\n          editButton.addEventListener('click', () => {\r\n            this._router.navigate(['pages/edit'], {\r\n              queryParams: { id: data.id },\r\n            });\r\n          });\r\n        }\r\n        const deleteButton = (row as HTMLElement).querySelector('.delete');\r\n        if (deleteButton) {\r\n          deleteButton.addEventListener('click', () => {\r\n            const id = data.id;\r\n            const name = data.name;\r\n            const confirmDelete = confirm('Are you sure you want to delete the Record of ' + name);\r\n            if (confirmDelete) {\r\n              this.service.deleteEmployee(id).subscribe(\r\n                () => {\r\n                  this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\r\n                   \r\n                    dtInstance.ajax.reload();\r\n                  });\r\n                },\r\n                (error) => {\r\n                  alert('Unsuccessful not deleted');\r\n                }\r\n              );\r\n            }\r\n          });\r\n        }\r\n        \r\n        return row;\r\n        \r\n      },\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}