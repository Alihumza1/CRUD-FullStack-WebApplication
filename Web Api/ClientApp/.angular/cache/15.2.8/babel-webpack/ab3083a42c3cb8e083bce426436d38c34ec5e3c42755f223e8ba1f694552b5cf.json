{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class Service {\n  constructor(http) {\n    this.http = http;\n    this.baseServerUrl = 'https://localhost:7149/api/';\n  }\n  updateEmployee(employeeModel) {\n    return this.http.put(this.baseServerUrl + 'Employee/update-Employee-by-id', employeeModel);\n  }\n  addEmployee(employeeModel) {\n    return this.http.post(this.baseServerUrl + 'Employee/addEmployee', employeeModel);\n  }\n  getEmployeebyid(id) {\n    return this.http.get(`${this.baseServerUrl}Employee/Get-Employee-by-id/${id}`);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`${this.baseServerUrl}Employee/Delete-Employee-by-id/${id}`);\n  }\n  getAllDepartments() {\n    return this.http.get(`${this.baseServerUrl}Department`);\n  }\n  getAllEmployee() {\n    return this.http.get(`${this.baseServerUrl}Employee/allEmployees`);\n  }\n  updateDepartment(departmentModel) {\n    return this.http.put(this.baseServerUrl + 'Department/update-Department-by-id', departmentModel);\n  }\n  addDepartment(departmentModel) {\n    return this.http.post(this.baseServerUrl + 'Department/addDepartment', departmentModel);\n  }\n  getDepartmentbyid(id) {\n    return this.http.get(`${this.baseServerUrl}Department/Get-Depart-by-id/${id}`);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(`${this.baseServerUrl}Employee/Delete-Employee-by-id/${id}`);\n  }\n  getAllDepartments() {\n    return this.http.get(`${this.baseServerUrl}Department`);\n  }\n  getAllEmployee() {\n    return this.http.get(`${this.baseServerUrl}Employee/allEmployees`);\n  }\n  signinUser(signininfo) {\n    return this.http.post(this.baseServerUrl + 'Auth/Register', {\n      UserName: signininfo[0],\n      PassWord: signininfo[1]\n    }, {\n      responseType: 'text'\n    });\n  }\n  loginUser(logininfo) {\n    return this.http.post(this.baseServerUrl + 'Auth/Login', {\n      UserName: logininfo[0],\n      PassWord: logininfo[1]\n    }, {\n      responseType: 'text'\n    });\n  }\n  IsloggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  IsloggedOut() {\n    alert(' Logout Successfully');\n    localStorage.removeItem('token');\n  }\n}\nService.ɵfac = function Service_Factory(t) {\n  return new (t || Service)(i0.ɵɵinject(i1.HttpClient));\n};\nService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Service,\n  factory: Service.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,OAAO;EAClBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACxB,kBAAa,GAAG,6BAA6B;EADN;EAEvCC,cAAc,CAACC,aAA2B;IACxC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACC,aAAa,GAAG,gCAAgC,EAACF,aAAa,CAAC;EAClG;EACAG,WAAW,CAACH,aAA6B;IACvC,OAAO,IAAI,CAACF,IAAI,CAACM,IAAI,CAAQ,IAAI,CAACF,aAAa,GAAG,sBAAsB,EAAEF,aAAa,CAAC;EAC1F;EACAK,eAAe,CAACC,EAAS;IACvB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,aAAa,+BAA+BI,EAAE,EAAE,CAAC;EACvF;EACAE,cAAc,CAACF,EAAS;IACtB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAQ,GAAG,IAAI,CAACP,aAAa,kCAAkCI,EAAE,EAAE,CAAC;EAC7F;EACAI,iBAAiB;IACf,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,aAAa,YAAY,CAAC;EAChE;EACAS,cAAc;IACZ,OAAO,IAAI,CAACb,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,aAAa,uBAAuB,CAAC;EAC3E;EACAU,gBAAgB,CAACC,eAA+B;IAC9C,OAAO,IAAI,CAACf,IAAI,CAACG,GAAG,CAAQ,IAAI,CAACC,aAAa,GAAG,oCAAoC,EAACW,eAAe,CAAC;EACxG;EACAC,aAAa,CAACD,eAAiC;IAC7C,OAAO,IAAI,CAACf,IAAI,CAACM,IAAI,CAAQ,IAAI,CAACF,aAAa,GAAG,0BAA0B,EAAEW,eAAe,CAAC;EAChG;EACAE,iBAAiB,CAACT,EAAS;IACzB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,aAAa,+BAA+BI,EAAE,EAAE,CAAC;EACvF;EACAE,cAAc,CAACF,EAAS;IACtB,OAAO,IAAI,CAACR,IAAI,CAACW,MAAM,CAAQ,GAAG,IAAI,CAACP,aAAa,kCAAkCI,EAAE,EAAE,CAAC;EAC7F;EACAI,iBAAiB;IACf,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,aAAa,YAAY,CAAC;EAChE;EACAS,cAAc;IACZ,OAAO,IAAI,CAACb,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,aAAa,uBAAuB,CAAC;EAC3E;EACAc,UAAU,CAACC,UAAyB;IAClC,OAAO,IAAI,CAACnB,IAAI,CAACM,IAAI,CACnB,IAAI,CAACF,aAAa,GAAG,eAAe,EACpC;MACEgB,QAAQ,EAAED,UAAU,CAAC,CAAC,CAAC;MACvBE,QAAQ,EAAEF,UAAU,CAAC,CAAC;KACvB,EACD;MACEG,YAAY,EAAE;KACf,CACF;EACH;EACAC,SAAS,CAACC,SAAwB;IAChC,OAAO,IAAI,CAACxB,IAAI,CAACM,IAAI,CACnB,IAAI,CAACF,aAAa,GAAG,YAAY,EACjC;MACEgB,QAAQ,EAAEI,SAAS,CAAC,CAAC,CAAC;MACtBH,QAAQ,EAAEG,SAAS,CAAC,CAAC;KACtB,EACD;MACEF,YAAY,EAAE;KACf,CACF;EACH;EACAG,UAAU;IACR,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;EACAC,WAAW;IACTC,KAAK,CAAC,sBAAsB,CAAC;IAC7BH,YAAY,CAACI,UAAU,CAAC,OAAO,CAAC;EAClC;;AArEWhC,OAAO;mBAAPA,OAAO;AAAA;AAAPA,OAAO;SAAPA,OAAO;EAAAiC,SAAPjC,OAAO;EAAAkC,YAFN;AAAM","names":["Service","constructor","http","updateEmployee","employeeModel","put","baseServerUrl","addEmployee","post","getEmployeebyid","id","get","deleteEmployee","delete","getAllDepartments","getAllEmployee","updateDepartment","departmentModel","addDepartment","getDepartmentbyid","signinUser","signininfo","UserName","PassWord","responseType","loginUser","logininfo","IsloggedIn","localStorage","getItem","IsloggedOut","alert","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\services\\service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { createEmployee,editEmployee } from '../models/employeeModel';\nimport { createDepartment,editDepartment } from '../models/departmentModel';\n@Injectable({\n  providedIn: 'root',\n})\nexport class Service {\n  constructor(private http: HttpClient) {}\n  baseServerUrl = 'https://localhost:7149/api/';\n  updateEmployee(employeeModel: editEmployee): Observable<any[]> {\n    return this.http.put<any[]>(this.baseServerUrl + 'Employee/update-Employee-by-id',employeeModel);\n  }\n  addEmployee(employeeModel: createEmployee): Observable<any[]> {\n    return this.http.post<any[]>(this.baseServerUrl + 'Employee/addEmployee', employeeModel);\n  }\n  getEmployeebyid(id:number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseServerUrl}Employee/Get-Employee-by-id/${id}`);\n  }\n  deleteEmployee(id:number): Observable<any[]> { \n    return this.http.delete<any[]>(`${this.baseServerUrl}Employee/Delete-Employee-by-id/${id}`);\n  }\n  getAllDepartments(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseServerUrl}Department`);\n  }\n  getAllEmployee(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseServerUrl}Employee/allEmployees`);\n  }\n  updateDepartment(departmentModel: editDepartment): Observable<any[]> {\n    return this.http.put<any[]>(this.baseServerUrl + 'Department/update-Department-by-id',departmentModel);\n  }\n  addDepartment(departmentModel: createDepartment): Observable<any[]> {\n    return this.http.post<any[]>(this.baseServerUrl + 'Department/addDepartment', departmentModel);\n  }\n  getDepartmentbyid(id:number): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseServerUrl}Department/Get-Depart-by-id/${id}`);\n  }\n  deleteEmployee(id:number): Observable<any[]> { \n    return this.http.delete<any[]>(`${this.baseServerUrl}Employee/Delete-Employee-by-id/${id}`);\n  }\n  getAllDepartments(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseServerUrl}Department`);\n  }\n  getAllEmployee(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseServerUrl}Employee/allEmployees`);\n  }\n  signinUser(signininfo: Array<string>) {\n    return this.http.post(\n      this.baseServerUrl + 'Auth/Register',\n      {\n        UserName: signininfo[0],\n        PassWord: signininfo[1],\n      },\n      {\n        responseType: 'text',\n      }\n    );\n  }\n  loginUser(logininfo: Array<string>) {\n    return this.http.post(\n      this.baseServerUrl + 'Auth/Login',\n      {\n        UserName: logininfo[0],\n        PassWord: logininfo[1],\n      },\n      {\n        responseType: 'text',\n      }\n    );\n  }\n  IsloggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  IsloggedOut() {\n    alert(' Logout Successfully');\n    localStorage.removeItem('token');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}