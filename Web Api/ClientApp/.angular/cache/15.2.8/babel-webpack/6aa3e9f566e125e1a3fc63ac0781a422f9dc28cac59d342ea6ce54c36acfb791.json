{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction EditComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Email is invalid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1, \" Password should be at least 6 and as long as 14 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EditComponent {\n  constructor(signinAuth, router) {\n    this.signinAuth = signinAuth;\n    this.router = router;\n    this.addForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      cnic: new FormControl('', [Validators.required, Validators.minLength(13), Validators.maxLength(13)]),\n      age: new FormControl('', [Validators.required, Validators.minLength(2), Validators.maxLength(2)]),\n      salary: new FormControl('', [Validators.required, Validators.minLength(5), Validators.maxLength(6)])\n    });\n    this.isUserValid = false;\n  }\n  ngOnInit() {}\n  Submitted() {\n    this.signinAuth.addEmployee().subscribe(resp => {\n      if (resp.length === 0) {\n        this.isUserValid = false;\n        alert('Unsuccessful');\n      } else {\n        this.router.navigate(['pages/home']);\n      }\n    });\n  }\n  get name() {\n    return this.addForm.get('name');\n  }\n  get depid() {\n    return this.addForm.get('depid');\n  }\n  get cnic() {\n    return this.addForm.get('cnic');\n  }\n  get age() {\n    return this.addForm.get('age');\n  }\n  get salary() {\n    return this.addForm.get('salary');\n  }\n}\nEditComponent.ɵfac = function EditComponent_Factory(t) {\n  return new (t || EditComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n};\nEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 20,\n  vars: 6,\n  consts: [[1, \"container\", \"pt-5\"], [1, \"mx-auto\", \"border\", \"p-4\", \"bg-light\", 2, \"width\", \"400px\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"inputEmail\", 1, \"form-label\"], [\"type\", \"email\", \"id\", \"inputEmail\", \"placeholder\", \"Enter your Email\", \"formControlName\", \"inputEmail\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"inputPassword\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"inputPassword\", \"placeholder\", \"Enter your Password\", \"formControlName\", \"inputPassword\", \"required\", \"\", 1, \"form-control\"], [1, \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"form-text\", \"text-danger\"]],\n  template: function EditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Create an account\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EditComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.Submitted();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, EditComponent_div_9_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(10, EditComponent_div_10_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵtemplate(15, EditComponent_div_15_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(16, EditComponent_div_16_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 9)(18, \"button\", 10);\n      i0.ɵɵtext(19, \"Signup\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.ad);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"required\"]) && (ctx.Email.dirty || ctx.Email.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Email.errors == null ? null : ctx.Email.errors[\"email\"]) && (ctx.Email.dirty || ctx.Email.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"required\"]) && (ctx.PWD.dirty || ctx.PWD.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"minlength\"]) || (ctx.PWD.errors == null ? null : ctx.PWD.errors[\"maxlength\"]) && (ctx.Email.dirty || ctx.Email.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.signinForm.invalid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","EditComponent","constructor","signinAuth","router","name","required","minLength","maxLength","depid","cnic","age","salary","ngOnInit","Submitted","addEmployee","subscribe","resp","length","isUserValid","alert","navigate","addForm","get","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\edit\\edit.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\edit\\edit.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormArray,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  constructor(private signinAuth: AuthService, private router: Router) {}\n  ngOnInit(): void { }\n  addForm = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [\n      Validators.required,\n    ]),\n    cnic: new FormControl('', [\n      Validators.required,\n      Validators.minLength(13),\n      Validators.maxLength(13),\n    ]),\n    age: new FormControl('', [\n      Validators.required,\n      Validators.minLength(2),\n      Validators.maxLength(2),\n    ]),\n    salary: new FormControl('', [\n      Validators.required,\n      Validators.minLength(5),\n      Validators.maxLength(6),\n    ]),\n  });\n  isUserValid: boolean = false;\n  Submitted(){\n    this.signinAuth.addEmployee()\n    .subscribe((resp: any[]) => {\n      if (resp.length === 0) {\n        this.isUserValid = false;\n        alert('Unsuccessful');\n      } else {\n        this.router.navigate(['pages/home']);\n      }\n    });\n  }\n  get name(): FormControl {\n    return this.addForm.get('name') as FormControl;\n  }\n  get depid(): FormControl {\n    return this.addForm.get('depid') as FormControl;\n  }\n   get cnic():FormControl{\n    return this.addForm.get('cnic') as FormControl;\n   } \n   get age():FormControl{\n    return this.addForm.get('age') as FormControl;\n   }  \n   get salary():FormControl{\n    return this.addForm.get('salary') as FormControl;\n   } \n\n}\n\n\n","\n<div class=\"container pt-5 \">\n    <div class=\"mx-auto border p-4 bg-light \" style=\"width: 400px; \">\n  <h2 >Create an account</h2>\n  <form [formGroup]=\"ad\" (ngSubmit)=\"Submitted()\">\n    <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"inputEmail\">Email:</label>\n        <input type=\"email\" class=\"form-control\" id=\"inputEmail\" placeholder=\"Enter your Email\" formControlName=\"inputEmail\" required>\n        <div class=\"form-text text-danger\" *ngIf=\"Email.errors?.['required'] && (Email.dirty || Email.touched)\">\n            Email is required\n        </div>\n        <div class=\"form-text text-danger\"*ngIf=\"Email.errors?.['email'] && (Email.dirty || Email.touched)\">\n          Email is invalid\n      </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"inputPassword\">Password:</label>\n        <input type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Enter your Password\" formControlName=\"inputPassword\"  required>\n        <div class=\"form-text text-danger\"  *ngIf=\"PWD.errors?.['required'] && (PWD.dirty || PWD.touched)\">\n          Password is required\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"PWD.errors?.['minlength'] || PWD.errors?.['maxlength'] && (Email.dirty || Email.touched)\">\n        Password should be at least 6 and as long as 14 characters long\n    </div>\n      </div>\n      <div class=\"text-center\">\n        <button type=\"submit\" [disabled]=\"signinForm.invalid\" class=\"btn btn-primary\">Signup</button>\n      </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}