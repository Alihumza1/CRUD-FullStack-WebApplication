{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service\";\nimport * as i2 from \"@angular/router\";\nexport class DepeditComponent {\n  constructor(service, router, Router) {\n    this.service = service;\n    this.router = router;\n    this.Router = Router;\n    this.employees = [];\n    this.editDepartment = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      headname: new FormControl('', [Validators.required]),\n      location: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(2), Validators.maxLength(25)])\n    });\n  }\n  ngOnInit() {\n    this.service.getAllEmployee().subscribe(data => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.id;\n    this.service.getDepartmentbyid(id).subscribe(data => {\n      this.editDepartment.patchValue({\n        name: data.name,\n        headname: data.headname,\n        depid: data.depId,\n        location: data.location\n      });\n    });\n  }\n  Submitted() {\n    const department = {\n      name: this.editDepartment.get('name')?.value,\n      headName: this.editDepartment.get('headname')?.value,\n      location: this.addDepartment.get('location')?.value\n    };\n    this.service.updateEmployee(employee).subscribe(resp => {\n      this.router.navigate(['pages/home']);\n    }, error => {\n      alert('Unsuccessful !');\n    });\n  }\n  get id() {\n    return this.editEmployee.get('id');\n  }\n  get name() {\n    return this.editEmployee.get('name');\n  }\n  get manager() {\n    return this.editEmployee.get('manager');\n  }\n  get depid() {\n    return this.editEmployee.get('depid');\n  }\n  get cnic() {\n    return this.editEmployee.get('cnic');\n  }\n  get age() {\n    return this.editEmployee.get('age');\n  }\n  get salary() {\n    return this.editEmployee.get('salary');\n  }\n}\nDepeditComponent.ɵfac = function DepeditComponent_Factory(t) {\n  return new (t || DepeditComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nDepeditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DepeditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 2,\n  vars: 0,\n  template: function DepeditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"depedit works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","DepeditComponent","constructor","service","router","Router","name","required","pattern","minLength","maxLength","depid","headname","location","ngOnInit","getAllEmployee","subscribe","data","employees","id","snapshot","queryParams","getDepartmentbyid","editDepartment","patchValue","depId","Submitted","department","get","value","headName","addDepartment","updateEmployee","employee","resp","navigate","error","alert","editEmployee","manager","cnic","age","salary","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depedit\\depedit.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depedit\\depedit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Service } from 'src/app/services/service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { editEmployee } from 'src/app/models/employeeModel';\nimport { editDepartment } from 'src/app/models/departmentModel';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './depedit.component.html',\n  styleUrls: ['./depedit.component.css'],\n})\nexport class DepeditComponent implements OnInit {\n  constructor(\n    private service: Service,\n    private router: Router,\n    private Router: ActivatedRoute\n  ) {}\n  employees: any[] = [];\n  ngOnInit(): void {\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.id;\n    this.service.getDepartmentbyid(id).subscribe((data: any) => {\n      this.editDepartment.patchValue({\n        name: data.name,\n        headname:data.headname,\n        depid: data.depId,\n        location: data.location,\n      });\n    });\n  }\n  editDepartment = new FormGroup({\n    \n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    headname: new FormControl('', [Validators.required]),\n    location: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(2),\n      Validators.maxLength(25),\n    ]),\n  });\n  Submitted() {\n    const department: editDepartment = {\n      name: this.editDepartment.get('name')?.value as string,\n      headName: this.editDepartment.get('headname')?.value as string,\n      location: this.addDepartment.get('location')?.value as string,\n    };\n    this.service.updateEmployee(employee).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/home']);\n      },\n      (error) => {\n        alert('Unsuccessful !');\n      }\n    );\n  }\n  get id(): FormControl {\n    return this.editEmployee.get('id') as FormControl;\n  }\n  get name(): FormControl {\n    return this.editEmployee.get('name') as FormControl;\n  }\n  get manager(): FormControl {\n    return this.editEmployee.get('manager') as FormControl;\n  }\n  get depid(): FormControl {\n    return this.editEmployee.get('depid') as FormControl;\n  }\n  get cnic(): FormControl {\n    return this.editEmployee.get('cnic') as FormControl;\n  }\n  get age(): FormControl {\n    return this.editEmployee.get('age') as FormControl;\n  }\n  get salary(): FormControl {\n    return this.editEmployee.get('salary') as FormControl;\n  }\n}\n","<p>depedit works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}