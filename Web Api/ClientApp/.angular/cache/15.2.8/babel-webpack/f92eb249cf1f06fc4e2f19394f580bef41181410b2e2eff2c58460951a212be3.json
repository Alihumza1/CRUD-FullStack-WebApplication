{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service\";\nimport * as i2 from \"@angular/router\";\nexport class DepaddComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.departments = [];\n    this.employees = [];\n    this.addEmployee = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      manager: new FormControl('', [Validators.required]),\n      cnic: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.minLength(13), Validators.maxLength(13)]),\n      age: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.min(18), Validators.max(59)]),\n      salary: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.min(10000), Validators.max(100000)])\n    });\n  }\n  ngOnInit() {\n    this.service.getAllEmployee().subscribe(data => {\n      this.employees = data;\n    });\n    this.service.getAllEmployee().subscribe(data => {\n      this.employees = data;\n    });\n  }\n  Submit() {\n    const employee = {\n      name: this.addEmployee.get('name')?.value,\n      manager: this.addEmployee.get('manager')?.value,\n      age: parseInt(this.addEmployee.get('age')?.value || ''),\n      salary: parseInt(this.addEmployee.get('salary')?.value || ''),\n      cnic: this.addEmployee.get('cnic')?.value,\n      depId: parseInt(this.addEmployee.get('depid')?.value || '')\n    };\n    this.service.addEmployee(employee).subscribe(resp => {\n      this.router.navigate(['pages/home']);\n    }, error => {\n      alert('Unsuccessful !');\n    });\n  }\n  get name() {\n    return this.addEmployee.get('name');\n  }\n  get manager() {\n    return this.addEmployee.get('manager');\n  }\n  get depid() {\n    return this.addEmployee.get('depid');\n  }\n  get cnic() {\n    return this.addEmployee.get('cnic');\n  }\n  get age() {\n    return this.addEmployee.get('age');\n  }\n  get salary() {\n    return this.addEmployee.get('salary');\n  }\n}\nDepaddComponent.ɵfac = function DepaddComponent_Factory(t) {\n  return new (t || DepaddComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.Router));\n};\nDepaddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DepaddComponent,\n  selectors: [[\"app-add\"]],\n  decls: 2,\n  vars: 0,\n  template: function DepaddComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"depadd works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","DepaddComponent","constructor","service","router","name","required","pattern","minLength","maxLength","depid","manager","cnic","age","min","max","salary","ngOnInit","getAllEmployee","subscribe","data","employees","Submit","employee","addEmployee","get","value","parseInt","depId","resp","navigate","error","alert","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depadd\\depadd.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depadd\\depadd.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Service } from 'src/app/services/service';\nimport {  Router } from '@angular/router';\nimport { createDepartment } from 'src/app/models/departmentModel';\n@Component({\n  selector: 'app-add',\n  templateUrl: './depadd.component.html',\n  styleUrls: ['./depadd.component.css'],\n})\nexport class DepaddComponent implements OnInit {\n  constructor(\n    private service: Service,\n    private router: Router,\n  ) {}\n  departments: any[] = [];\n  employees: any[] = [];\n  ngOnInit(): void {\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employees = data;\n    });\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employees = data;\n    });\n  }\n  addEmployee = new FormGroup({\n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    manager: new FormControl('', [Validators.required]),\n    cnic: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.minLength(13),\n      Validators.maxLength(13),\n    ]),\n    age: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.min(18),\n      Validators.max(59),\n    ]),\n    salary: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.min(10000),\n      Validators.max(100000),\n    ]),\n  });\n  Submit(): void {\n    const employee: createEmployee = {\n      name: this.addEmployee.get('name')?.value as string,\n      manager: this.addEmployee.get('manager')?.value as string,\n      age: parseInt(this.addEmployee.get('age')?.value || ''),\n      salary: parseInt(this.addEmployee.get('salary')?.value || ''),\n      cnic: this.addEmployee.get('cnic')?.value as string,\n      depId: parseInt(this.addEmployee.get('depid')?.value || ''),\n    };\n    this.service.addEmployee(employee).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/home']);\n      },\n      (error) => {\n        alert('Unsuccessful !');\n      }\n    );\n  }\n  get name(): FormControl {\n    return this.addEmployee.get('name') as FormControl;\n  }\n  get manager(): FormControl {\n    return this.addEmployee.get('manager') as FormControl;\n  }\n  get depid(): FormControl {\n    return this.addEmployee.get('depid') as FormControl;\n  }\n  get cnic(): FormControl {\n    return this.addEmployee.get('cnic') as FormControl;\n  }\n  get age(): FormControl {\n    return this.addEmployee.get('age') as FormControl;\n  }\n  get salary(): FormControl {\n    return this.addEmployee.get('salary') as FormControl;\n  }\n}\n","<p>depadd works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}