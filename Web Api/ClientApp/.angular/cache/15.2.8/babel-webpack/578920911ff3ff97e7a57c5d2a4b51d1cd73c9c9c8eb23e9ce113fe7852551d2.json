{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let Service = /*#__PURE__*/(() => {\n  class Service {\n    constructor(http) {\n      this.http = http;\n      this.baseServerUrl = environment.baseServerUrl;\n    }\n    updateEmployee(employeeModel) {\n      return this.http.put(this.baseServerUrl + 'Employee/update-Employee-by-id', employeeModel);\n    }\n    addEmployee(employeeModel) {\n      return this.http.post(this.baseServerUrl + 'Employee/addEmployee', employeeModel);\n    }\n    getEmployeebyid(id) {\n      return this.http.get(`${this.baseServerUrl}Employee/Get-Employee-by-id/${id}`);\n    }\n    deleteEmployee(id) {\n      return this.http.delete(`${this.baseServerUrl}Employee/Delete-Employee-by-id/${id}`);\n    }\n    getAllDepartments() {\n      return this.http.get(`${this.baseServerUrl}Department/allDepartments`);\n    }\n    getAllEmployee() {\n      return this.http.get(`${this.baseServerUrl}Employee/allEmployees`);\n    }\n    updateDepartment(departmentModel) {\n      return this.http.put(this.baseServerUrl + 'Department/update-Department-by-id', departmentModel);\n    }\n    addDepartment(departmentModel) {\n      return this.http.post(this.baseServerUrl + 'Department/addDepartment', departmentModel);\n    }\n    getDepartmentbyid(id) {\n      return this.http.get(`${this.baseServerUrl}Department/Get-Department-by-id/${id}`);\n    }\n    deleteDepartment(id) {\n      return this.http.delete(`${this.baseServerUrl}Department/Delete-Department-by-id/${id}`);\n    }\n    signinUser(signininfo) {\n      return this.http.post(this.baseServerUrl + 'Auth/Register', {\n        UserName: signininfo[0],\n        PassWord: signininfo[1]\n      }, {\n        responseType: 'text'\n      });\n    }\n    loginUser(logininfo) {\n      return this.http.post(this.baseServerUrl + 'Auth/Login', {\n        UserName: logininfo[0],\n        PassWord: logininfo[1]\n      }, {\n        responseType: 'text'\n      });\n    }\n    IsloggedIn() {\n      return !!localStorage.getItem('token');\n    }\n    IsloggedOut() {\n      alert(' Logout Successfully');\n      localStorage.removeItem('token');\n    }\n  }\n  Service.ɵfac = function Service_Factory(t) {\n    return new (t || Service)(i0.ɵɵinject(i1.HttpClient));\n  };\n  Service.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: Service,\n    factory: Service.ɵfac,\n    providedIn: 'root'\n  });\n  return Service;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}