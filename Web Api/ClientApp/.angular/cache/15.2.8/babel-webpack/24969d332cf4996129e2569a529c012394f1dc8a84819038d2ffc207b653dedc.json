{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseServerUrl = 'https://localhost:7149/api/';\n    this.apiUrl = 'https://localhost:7149/api/Employee';\n  }\n  updateEmployee(employeeModel) {\n    return this.http.put(this.apiUrl + '/update-Employee-by-id', employeeModel);\n  }\n  addEmployee(employeeModel) {\n    return this.http.post(this.apiUrl + '/addEmployee', employeeModel);\n  }\n  getEmployeebyid(id) {\n    return this.http.get(`${this.apiUrl}/Get-Employee-by-id/${id}`);\n  }\n  getEmployeebyid(id) {\n    return this.http.get(`${this.apiUrl}/Get-Employee-by-id/${id}`);\n  }\n  getAllDepartments() {\n    return this.http.get(`${this.baseServerUrl}Department`);\n  }\n  signinUser(signininfo) {\n    return this.http.post(this.baseServerUrl + 'Auth/Register', {\n      UserName: signininfo[0],\n      PassWord: signininfo[1]\n    }, {\n      responseType: 'text'\n    });\n  }\n  loginUser(logininfo) {\n    return this.http.post(this.baseServerUrl + 'Auth/Login', {\n      UserName: logininfo[0],\n      PassWord: logininfo[1]\n    }, {\n      responseType: 'text'\n    });\n  }\n  IsloggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  IsloggedOut() {\n    console.log('AuthService - logout');\n    localStorage.removeItem('token');\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACxB,kBAAa,GAAG,6BAA6B;IACrC,WAAM,GAAG,qCAAqC;EAFf;EAGvCC,cAAc,CAACC,aAA2B;IACxC,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAClB,IAAI,CAACC,MAAM,GAAG,wBAAwB,EACtCF,aAAa,CACd;EACH;EACAG,WAAW,CAACH,aAA6B;IACvC,OAAO,IAAI,CAACF,IAAI,CAACM,IAAI,CAAQ,IAAI,CAACF,MAAM,GAAG,cAAc,EAAEF,aAAa,CAAC;EAC3E;EAEAK,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,MAAM,uBAAuBI,EAAE,EAAE,CAAC;EACxE;EACAD,eAAe,CAACC,EAAU;IACxB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACL,MAAM,uBAAuBI,EAAE,EAAE,CAAC;EACxE;EACAE,iBAAiB;IACf,OAAO,IAAI,CAACV,IAAI,CAACS,GAAG,CAAQ,GAAG,IAAI,CAACE,aAAa,YAAY,CAAC;EAChE;EACAC,UAAU,CAACC,UAAyB;IAClC,OAAO,IAAI,CAACb,IAAI,CAACM,IAAI,CACnB,IAAI,CAACK,aAAa,GAAG,eAAe,EACpC;MACEG,QAAQ,EAAED,UAAU,CAAC,CAAC,CAAC;MACvBE,QAAQ,EAAEF,UAAU,CAAC,CAAC;KACvB,EACD;MACEG,YAAY,EAAE;KACf,CACF;EACH;EACAC,SAAS,CAACC,SAAwB;IAChC,OAAO,IAAI,CAAClB,IAAI,CAACM,IAAI,CACnB,IAAI,CAACK,aAAa,GAAG,YAAY,EACjC;MACEG,QAAQ,EAAEI,SAAS,CAAC,CAAC,CAAC;MACtBH,QAAQ,EAAEG,SAAS,CAAC,CAAC;KACtB,EACD;MACEF,YAAY,EAAE;KACf,CACF;EACH;EACAG,UAAU;IACR,OAAO,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;EACAC,WAAW;IACTC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnCJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAClC;;AArDW3B,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAA4B,SAAX5B,WAAW;EAAA6B,YAFV;AAAM","names":["AuthService","constructor","http","updateEmployee","employeeModel","put","apiUrl","addEmployee","post","getEmployeebyid","id","get","getAllDepartments","baseServerUrl","signinUser","signininfo","UserName","PassWord","responseType","loginUser","logininfo","IsloggedIn","localStorage","getItem","IsloggedOut","console","log","removeItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { createEmployee,editEmployee } from '../models/employeeModel';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n  baseServerUrl = 'https://localhost:7149/api/';\n  private apiUrl = 'https://localhost:7149/api/Employee';\n  updateEmployee(employeeModel: editEmployee): Observable<any[]> {\n    return this.http.put<any[]>(\n      this.apiUrl + '/update-Employee-by-id',\n      employeeModel\n    );\n  }\n  addEmployee(employeeModel: createEmployee): Observable<any[]> {\n    return this.http.post<any[]>(this.apiUrl + '/addEmployee', employeeModel);\n  }\n\n  getEmployeebyid(id: string): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/Get-Employee-by-id/${id}`);\n  }\n  getEmployeebyid(id: string): Observable<any[]> {\n    return this.http.get<any[]>(`${this.apiUrl}/Get-Employee-by-id/${id}`);\n  }\n  getAllDepartments(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseServerUrl}Department`);\n  }\n  signinUser(signininfo: Array<string>) {\n    return this.http.post(\n      this.baseServerUrl + 'Auth/Register',\n      {\n        UserName: signininfo[0],\n        PassWord: signininfo[1],\n      },\n      {\n        responseType: 'text',\n      }\n    );\n  }\n  loginUser(logininfo: Array<string>) {\n    return this.http.post(\n      this.baseServerUrl + 'Auth/Login',\n      {\n        UserName: logininfo[0],\n        PassWord: logininfo[1],\n      },\n      {\n        responseType: 'text',\n      }\n    );\n  }\n  IsloggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  IsloggedOut() {\n    console.log('AuthService - logout');\n    localStorage.removeItem('token');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}