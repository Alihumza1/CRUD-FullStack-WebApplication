{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet SignupComponent = class SignupComponent {\n  constructor(signinAuth, router) {\n    this.signinAuth = signinAuth;\n    this.router = router;\n    this.signinForm = new FormGroup({\n      inputEmail: new FormControl('', [Validators.required, Validators.email]),\n      inputPassword: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(14)])\n    });\n    this.isUserValid = false;\n  }\n  ngOnInit() {}\n  Submitted() {\n    this.signinAuth.signinUser([this.signinForm.value.inputEmail, this.signinForm.value.inputPassword]).subscribe(resp => {\n      if (resp == 'Failure') {\n        this.isUserValid = false;\n        alert('Unsuceesful');\n      } else {\n        this.router.navigate(['pages/home']);\n      }\n    });\n  }\n  get Email() {\n    return this.signinForm.get('inputEmail');\n  }\n  get PWD() {\n    return this.signinForm.get('inputPassword');\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-add',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SACEC,SAAS,EAGTC,WAAW,EACXC,UAAU,QACL,gBAAgB;AAQhB,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAE1BC,YAAoBC,UAAuB,EAAUC,MAAc;IAA/C,eAAU,GAAVD,UAAU;IAAuB,WAAM,GAANC,MAAM;IAG3D,eAAU,GAAG,IAAIN,SAAS,CAAC;MACzBO,UAAU,EAAE,IAAIN,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACM,QAAQ,EAAEN,UAAU,CAACO,KAAK,CAAC,CAAC;MACxEC,aAAa,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CACjCC,UAAU,CAACM,QAAQ,EACnBN,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,EACvBT,UAAU,CAACU,SAAS,CAAC,EAAE,CAAC,CACzB;KAEF,CAAC;IACF,gBAAW,GAAY,KAAK;EAZ0C;EAEtEC,QAAQ,IAAW;EAWnBC,SAAS;IACP,IAAI,CAACT,UAAU,CACZU,UAAU,CAAC,CACV,IAAI,CAACC,UAAU,CAACC,KAAK,CAACV,UAAoB,EAC1C,IAAI,CAACS,UAAU,CAACC,KAAK,CAACP,aAAuB,CAC9C,CAAC,CACDQ,SAAS,CAAEC,IAAI,IAAI;MAClB,IAAIA,IAAI,IAAI,SAAS,EAAE;QACrB,IAAI,CAACC,WAAW,GAAG,KAAK;QACxBC,KAAK,CAAC,aAAa,CAAC;OACrB,MAAM;QAEL,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;IAIxC,CAAC,CAAC;EACN;EAGA,IAAIC,KAAK;IACP,OAAO,IAAI,CAACP,UAAU,CAACQ,GAAG,CAAC,YAAY,CAAgB;EACzD;EACA,IAAIC,GAAG;IACL,OAAO,IAAI,CAACT,UAAU,CAACQ,GAAG,CAAC,eAAe,CAAgB;EAC5D;CACD;AAzCYrB,eAAe,eAL3BJ,SAAS,CAAC;EACT2B,QAAQ,EAAE,SAAS;EACnBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACWzB,eAAe,CAyC3B;SAzCYA,eAAe","names":["Component","FormGroup","FormControl","Validators","SignupComponent","constructor","signinAuth","router","inputEmail","required","email","inputPassword","minLength","maxLength","ngOnInit","Submitted","signinUser","signinForm","value","subscribe","resp","isUserValid","alert","navigate","Email","get","PWD","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\add\\add.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  FormArray,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { AuthService } from  'src/app/services/auth.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-add',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private signinAuth: AuthService, private router: Router) {}\n\n  ngOnInit(): void { }\n  signinForm = new FormGroup({\n    inputEmail: new FormControl('', [Validators.required, Validators.email]),\n    inputPassword: new FormControl('', [\n      Validators.required,\n      Validators.minLength(6),\n      Validators.maxLength(14),\n    ]),\n    \n  });\n  isUserValid: boolean = false;\n  Submitted() {\n    this.signinAuth\n      .signinUser([\n        this.signinForm.value.inputEmail as string,\n        this.signinForm.value.inputPassword as string,\n      ])\n      .subscribe((resp) => {\n        if (resp == 'Failure') {\n          this.isUserValid = false;\n          alert('Unsuceesful');\n        } else {\n         \n          this.router.navigate(['pages/home']);\n\n          \n        }\n      });\n  }\n\n\n  get Email(): FormControl {\n    return this.signinForm.get('inputEmail') as FormControl;\n  }\n  get PWD(): FormControl {\n    return this.signinForm.get('inputPassword') as FormControl;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}