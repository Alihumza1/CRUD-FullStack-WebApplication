{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction DepeditComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Department Name is required and should only contain alphabets. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepeditComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Department Name should be 2 and as long as 25 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepeditComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(employee_r6.name);\n  }\n}\nfunction DepeditComponent_div_23_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r9.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(employee_r9.name);\n  }\n}\nfunction DepeditComponent_div_23_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Manager is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepeditComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 6)(2, \"label\", 21);\n    i0.ɵɵtext(3, \"Manager:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"select\", 22)(5, \"option\", 12);\n    i0.ɵɵtext(6, \"Select Manager\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, DepeditComponent_div_23_option_7_Template, 2, 2, \"option\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DepeditComponent_div_23_div_8_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" is required \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.employees);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (ctx_r3.manager.errors == null ? null : ctx_r3.manager.errors.required) && (ctx_r3.manager.dirty || ctx_r3.manager.touched));\n  }\n}\nfunction DepeditComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Cnic number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepeditComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Location should be 2 and as long as 25 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/pages/dephome\"];\n};\nexport class DepeditComponent {\n  constructor(service, router, Router) {\n    this.service = service;\n    this.router = router;\n    this.Router = Router;\n    this.employees = [];\n    this.editDepartment = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      headname: new FormControl('', [Validators.required]),\n      location: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(2), Validators.maxLength(25)])\n    });\n  }\n  ngOnInit() {\n    this.service.getAllEmployee().subscribe(data => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.depid;\n    this.service.getDepartmentbyid(id).subscribe(data => {\n      this.editDepartment.patchValue({\n        name: data.name,\n        depid: data.depid,\n        headname: data.headname,\n        location: data.location\n      });\n    });\n  }\n  Submit() {\n    const department = {\n      depId: parseInt(this.editDepartment.get('depid')?.value || ''),\n      name: this.editDepartment.get('name')?.value,\n      headName: this.editDepartment.get('headname')?.value,\n      location: this.editDepartment.get('location')?.value\n    };\n    this.service.updateDepartment(department).subscribe(resp => {\n      this.router.navigate(['pages/dephome']);\n    }, error => {\n      alert('Unsuccessful !');\n    });\n  }\n  get depid() {\n    return this.editDepartment.get('depid');\n  }\n  get name() {\n    return this.editDepartment.get('name');\n  }\n  get headname() {\n    return this.editDepartment.get('headname');\n  }\n  get location() {\n    return this.editDepartment.get('location');\n  }\n}\nDepeditComponent.ɵfac = function DepeditComponent_Factory(t) {\n  return new (t || DepeditComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nDepeditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DepeditComponent,\n  selectors: [[\"app-edit\"]],\n  decls: 37,\n  vars: 10,\n  consts: [[1, \"container\"], [1, \"mx-auto\", \"border\", \"p-3\", \"bg-light\", \"shadow-lg\", 2, \"width\", \"400px\"], [3, \"formGroup\", \"ngSubmit\"], [\"hidden\", \"\", 1, \"mb-3\"], [\"for\", \"depid\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"depid\", \"placeholder\", \"Enter your Department id\", \"formControlName\", \"depid\", \"required\", \"\", 1, \"form-control\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter your Name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"headname\", 1, \"form-label\"], [\"id\", \"headname\", \"formControlName\", \"headname\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"location\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"location\", \"placeholder\", \"Enter your Location\", \"formControlName\", \"location\", \"required\", \"\", 1, \"form-control\"], [1, \"btn-group\", \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [1, \"form-text\", \"text-danger\"], [3, \"value\"], [\"for\", \"manager\", 1, \"form-label\"], [\"id\", \"manager\", \"formControlName\", \"manager\", \"required\", \"\", 1, \"form-control\"]],\n  template: function DepeditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\")(3, \"b\");\n      i0.ɵɵtext(4, \"Edit\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function DepeditComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.Submit();\n      });\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Department ID :\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Department Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 8);\n      i0.ɵɵtemplate(14, DepeditComponent_div_14_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(15, DepeditComponent_div_15_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Manager:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"select\", 11)(20, \"option\", 12);\n      i0.ɵɵtext(21, \"Select HeadName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(22, DepeditComponent_option_22_Template, 2, 2, \"option\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(23, DepeditComponent_div_23_Template, 10, 2, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 6)(25, \"label\", 14);\n      i0.ɵɵtext(26, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(27, \"input\", 15);\n      i0.ɵɵtemplate(28, DepeditComponent_div_28_Template, 2, 0, \"div\", 9);\n      i0.ɵɵtemplate(29, DepeditComponent_div_29_Template, 2, 0, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"br\");\n      i0.ɵɵelementStart(31, \"div\", 16)(32, \"button\", 17);\n      i0.ɵɵtext(33, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(34, \" \\u00A0 \\u00A0 \");\n      i0.ɵɵelementStart(35, \"button\", 18);\n      i0.ɵɵtext(36, \"Cancel\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.editDepartment);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", (ctx.name.touched || ctx.name.dirty) && ((ctx.name.errors == null ? null : ctx.name.errors.required) || (ctx.name.errors == null ? null : ctx.name.errors.pattern)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.name.errors == null ? null : ctx.name.errors[\"minlength\"]) || (ctx.name.errors == null ? null : ctx.name.errors[\"maxlength\"]) && (ctx.name.dirty || ctx.name.touched));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.headname.errors == null ? null : ctx.headname.errors.required) && (ctx.headname.dirty || ctx.headname.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", (ctx.location.touched || ctx.location.dirty) && ((ctx.location.errors == null ? null : ctx.location.errors.required) || (ctx.location.errors == null ? null : ctx.location.errors.pattern)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.location.errors == null ? null : ctx.location.errors[\"minlength\"]) || (ctx.location.errors == null ? null : ctx.location.errors[\"maxlength\"]) && (ctx.location.dirty || ctx.location.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", ctx.editDepartment.invalid);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c0));\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink, i4.NgForOf, i4.NgIf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","DepeditComponent","constructor","service","router","Router","name","required","pattern","minLength","maxLength","depid","headname","location","ngOnInit","getAllEmployee","subscribe","data","employees","id","snapshot","queryParams","getDepartmentbyid","editDepartment","patchValue","Submit","department","depId","parseInt","get","value","headName","updateDepartment","resp","navigate","error","alert","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depedit\\depedit.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depedit\\depedit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Service } from 'src/app/services/service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { editEmployee } from 'src/app/models/employeeModel';\nimport { editDepartment } from 'src/app/models/departmentModel';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './depedit.component.html',\n  styleUrls: ['./depedit.component.css'],\n})\nexport class DepeditComponent implements OnInit {\n  constructor(\n    private service: Service,\n    private router: Router,\n    private Router: ActivatedRoute\n  ) {}\n  employees: any[] = [];\n  ngOnInit(): void {\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.depid;\n    this.service.getDepartmentbyid(id).subscribe((data: any) => {\n      this.editDepartment.patchValue({\n        name: data.name,\n        depid:data.depid,\n        headname:data.headname,\n        location: data.location,\n      });\n    });\n  }\n  editDepartment = new FormGroup({\n    \n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    headname: new FormControl('', [Validators.required]),\n    location: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(2),\n      Validators.maxLength(25),\n    ]),\n  });\n  Submit() {\n    const department: editDepartment = {\n      depId: parseInt(this.editDepartment.get('depid')?.value || ''),\n      name: this.editDepartment.get('name')?.value as string,\n      headName: this.editDepartment.get('headname')?.value as string,\n      location: this.editDepartment.get('location')?.value as string,\n    };\n    this.service.updateDepartment(department).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/dephome']);\n      },\n      (error) => {\n        alert('Unsuccessful !');\n      }\n    );\n  }\n \n  \n  get depid(): FormControl {\n    return this.editDepartment.get('depid') as FormControl;\n  }\n  get name(): FormControl {\n    return this.editDepartment.get('name') as FormControl;\n  }\n  get headname(): FormControl {\n    return this.editDepartment.get('headname') as FormControl;\n  }\n  get location(): FormControl {\n    return this.editDepartment.get('location') as FormControl;\n  }\n}\n","<div class=\"container \">\n    <div class=\"mx-auto border p-3 bg-light shadow-lg\" style=\"width: 400px; \">\n  <h2><b>Edit</b></h2>\n  <form [formGroup]=\"editDepartment\" (ngSubmit)=\"Submit()\">\n    <div class=\"mb-3\" hidden>\n        <label class=\"form-label\" for=\"depid\">Department ID :</label>\n        <input type=\"number\" class=\"form-control\" id=\"depid\" placeholder=\"Enter your Department id\" formControlName=\"depid\" required>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"name\">Department Name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter your Name\" formControlName=\"name\"  required>\n        <div class=\"form-text text-danger\"  *ngIf=\"(name.touched || name.dirty) && (name.errors?.required || name.errors?.pattern)\">\n            Department Name is required and should only contain alphabets.\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"name.errors?.['minlength'] || name.errors?.['maxlength'] && (name.dirty || name.touched       )\">\n        Department  Name should be 2 and as long as 25 characters long\n    </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"headname\">Manager:</label>\n        <select class=\"form-control\" id=\"headname\" formControlName=\"headname\" required>\n          <option value=\"\">Select HeadName</option>\n          <option *ngFor=\"let employee of employees\" [value]=\"employee.name\">{{ employee.name }}</option>\n        </select>\n        <div class=\"form-text text-danger\" *ngIf=\"headname.errors?.required && (headname.dirty || headname.touched)\">\n           <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"manager\">Manager:</label>\n        <select class=\"form-control\" id=\"manager\" formControlName=\"manager\" required>\n          <option value=\"\">Select Manager</option>\n          <option *ngFor=\"let employee of employees\" [value]=\"employee.name\">{{ employee.name }}</option>\n        </select>\n        <div class=\"form-text text-danger\" *ngIf=\"manager.errors?.required && (manager.dirty || manager.touched)\">\n          Manager is required\n        </div>\n      </div> is required\n        </div>\n      </div>\n      <div class=\"mb-3\">\n        <label class=\"form-label\" for=\"location\">Location:</label>\n        <input type=\"text\" class=\"form-control\" id=\"location\" placeholder=\"Enter your Location\" formControlName=\"location\"  required>\n        <div class=\"form-text text-danger\"   *ngIf=\"(location.touched || location.dirty) && (location.errors?.required || location.errors?.pattern)\">\n          Cnic number is required\n      </div>\n      <div class=\"form-text text-danger\" *ngIf=\"location.errors?.['minlength'] || location.errors?.['maxlength'] && (location.dirty || location.touched)\">\n        Location should be 2 and as long as 25 characters long\n    </div>\n      </div>\n      <br>\n      <div class=\"btn-group d-flex justify-content-center\" >\n        <button type=\"submit\" [disabled]=\"editDepartment.invalid\" class=\"btn btn-success\">Submit</button>\n        &nbsp; &nbsp; <button class=\"btn btn-primary\" [routerLink]=\"['/pages/dephome']\">Cancel</button>\n      </div>\n  </form>\n    </div>\n</div>\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}