{"ast":null,"code":"import { DataTableDirective } from 'angular-datatables';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"src/app/services/service\";\nimport * as i4 from \"angular-datatables\";\nconst _c0 = function () {\n  return [\"/pages/depadd\"];\n};\nexport let DephomeComponent = /*#__PURE__*/(() => {\n  class DephomeComponent {\n    constructor(route, http, _router, service) {\n      this.route = route;\n      this.http = http;\n      this._router = _router;\n      this.service = service;\n      this.dtOptions = {};\n    }\n    ngOnInit() {\n      this.fetchData();\n    }\n    fetchData() {\n      this.dtOptions = {\n        processing: true,\n        serverSide: true,\n        paging: true,\n        searching: true,\n        ordering: true,\n        ajax: (dataTablesParameters, callback) => {\n          this.http.post('https://localhost:7149/api/Department', dataTablesParameters).subscribe(Response => {\n            callback({\n              recordsTotal: Response.recordsTotal,\n              recordsFiltered: Response.recordsFiltered,\n              data: Response.data\n            });\n          });\n        },\n        columns: [{\n          title: 'Depid',\n          data: 'depid',\n          visible: false,\n          orderable: false\n        }, {\n          title: 'Department Name',\n          data: 'name'\n        }, {\n          title: 'Head Name',\n          data: 'headName'\n        }, {\n          title: 'Location',\n          data: 'location'\n        }, {\n          title: 'Actions',\n          data: null,\n          render: function () {\n            return '<button class = \"btn btn-success edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\n          }\n        }],\n        columnDefs: [{\n          targets: [1],\n          orderable: true,\n          searchable: true\n        }, {\n          targets: [3],\n          orderable: true\n        }, {\n          targets: '_all',\n          orderable: false,\n          searchable: false\n        }],\n        rowCallback: (row, data, index) => {\n          const editButton = row.querySelector('.edit');\n          if (editButton) {\n            editButton.addEventListener('click', () => {\n              this._router.navigate(['pages/depedit'], {\n                queryParams: {\n                  depid: data.depid\n                }\n              });\n            });\n          }\n          const deleteButton = row.querySelector('.delete');\n          if (deleteButton) {\n            deleteButton.addEventListener('click', () => {\n              const id = data.depid;\n              const name = data.name;\n              const confirmDelete = confirm('Are you sure you want to delete the Record of ' + name);\n              if (confirmDelete) {\n                this.service.deleteDepartment(id).subscribe(() => {\n                  this.dtElement.dtInstance.then(dtInstance => {\n                    dtInstance.ajax.reload();\n                  });\n                }, error => {\n                  alert('Unsuccessful not deleted');\n                });\n              }\n            });\n          }\n          return row;\n        }\n      };\n    }\n  }\n  DephomeComponent.ɵfac = function DephomeComponent_Factory(t) {\n    return new (t || DephomeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.Service));\n  };\n  DephomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DephomeComponent,\n    selectors: [[\"app-home\"]],\n    viewQuery: function DephomeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DataTableDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n      }\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"id\", \"myTable\", \"datatable\", \"\", 1, \"table\", \"table-bordered\", \"shadow-lg\", 3, \"dtOptions\"]],\n    template: function DephomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵtext(1, \"Add Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\")(3, \"br\")(4, \"table\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions);\n      }\n    },\n    dependencies: [i1.RouterLink, i4.DataTableDirective],\n    encapsulation: 2\n  });\n  return DephomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}