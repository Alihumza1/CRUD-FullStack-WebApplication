{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet EditComponent = class EditComponent {\n  constructor(service, router, Router) {\n    this.service = service;\n    this.router = router;\n    this.Router = Router;\n    this.departments = [];\n    this.employees = [];\n    this.editEmployee = new FormGroup({\n      id: new FormControl('', [Validators.required]),\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(1), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      manager: new FormControl('', [Validators.required]),\n      cnic: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.minLength(13), Validators.maxLength(13)]),\n      age: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.min(18), Validators.max(59)]),\n      salary: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.min(10000), Validators.max(100000)])\n    });\n    this.isUserValid = false;\n  }\n  ngOnInit() {\n    this.service.getAllDepartments().subscribe(data => {\n      this.departments = data;\n    });\n    this.service.getAllEmployee().subscribe(data => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.id;\n    this.service.getEmployeebyid(id).subscribe(data => {\n      this.editEmployee.patchValue({\n        id: data.id,\n        name: data.name,\n        manager: data.manager,\n        depid: data.depId,\n        cnic: data.cnic,\n        age: data.age,\n        salary: data.salary\n      });\n    });\n  }\n  Submitted() {\n    const employee = {\n      id: parseInt(this.editEmployee.get('id')?.value || ''),\n      name: this.editEmployee.get('name')?.value,\n      manager: this.editEmployee.get('manager')?.value,\n      age: parseInt(this.editEmployee.get('age')?.value || ''),\n      salary: parseInt(this.editEmployee.get('salary')?.value || ''),\n      cnic: this.editEmployee.get('cnic')?.value,\n      depId: parseInt(this.editEmployee.get('depid')?.value || '')\n    };\n    this.service.updateEmployee(employee).subscribe(resp => {\n      this.router.navigate(['pages/home']);\n    }, error => {\n      alert('Unsuccessful !');\n    });\n  }\n  get id() {\n    return this.editEmployee.get('id');\n  }\n  get name() {\n    return this.editEmployee.get('name');\n  }\n  get manager() {\n    return this.editEmployee.get('manager');\n  }\n  get depid() {\n    return this.editEmployee.get('depid');\n  }\n  get cnic() {\n    return this.editEmployee.get('cnic');\n  }\n  get age() {\n    return this.editEmployee.get('age');\n  }\n  get salary() {\n    return this.editEmployee.get('salary');\n  }\n};\nEditComponent = __decorate([Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})], EditComponent);\nexport { EditComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","EditComponent","constructor","service","router","Router","id","required","name","pattern","minLength","maxLength","depid","manager","cnic","age","min","max","salary","ngOnInit","getAllDepartments","subscribe","data","departments","getAllEmployee","employees","snapshot","queryParams","getEmployeebyid","editEmployee","patchValue","depId","Submitted","employee","parseInt","get","value","updateEmployee","resp","navigate","error","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\depedit\\depedit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Service } from 'src/app/services/service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { editEmployee } from 'src/app/models/employeeModel';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css'],\n})\nexport class EditComponent implements OnInit {\n  constructor(\n    private service: Service,\n    private router: Router,\n    private Router: ActivatedRoute\n  ) {}\n  departments: any[] = [];\n  employees: any[] = [];\n  ngOnInit(): void {\n    this.service.getAllDepartments().subscribe((data: any[]) => {\n      this.departments = data;\n    });\n    this.service.getAllEmployee().subscribe((data: any[]) => {\n      this.employees = data;\n    });\n    const id = this.Router.snapshot.queryParams.id;\n    this.service.getEmployeebyid(id).subscribe((data: any) => {\n      this.editEmployee.patchValue({\n        id: data.id,\n        name: data.name,\n        manager:data.manager,\n        depid: data.depId,\n        cnic: data.cnic,\n        age: data.age,\n        salary: data.salary,\n      });\n    });\n  }\n  editEmployee = new FormGroup({\n    id: new FormControl('', [Validators.required]),\n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(1),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    manager: new FormControl('', [Validators.required]),\n    cnic: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.minLength(13),\n      Validators.maxLength(13),\n    ]),\n    age: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.min(18),\n      Validators.max(59),\n    ]),\n    salary: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.min(10000),\n      Validators.max(100000),\n    ]),\n  });\n  isUserValid: boolean = false;\n  Submitted() {\n    const employee: editEmployee = {\n      id: parseInt(this.editEmployee.get('id')?.value || ''),\n      name: this.editEmployee.get('name')?.value as string,\n      manager: this.editEmployee.get('manager')?.value as string,\n      age: parseInt(this.editEmployee.get('age')?.value || ''),\n      salary: parseInt(this.editEmployee.get('salary')?.value || ''),\n      cnic: this.editEmployee.get('cnic')?.value as string,\n      depId: parseInt(this.editEmployee.get('depid')?.value || ''),\n    };\n    this.service.updateEmployee(employee).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/home']);\n      },\n      (error) => {\n        alert('Unsuccessful !');\n      }\n    );\n  }\n  get id(): FormControl {\n    return this.editEmployee.get('id') as FormControl;\n  }\n  get name(): FormControl {\n    return this.editEmployee.get('name') as FormControl;\n  }\n  get manager(): FormControl {\n    return this.editEmployee.get('manager') as FormControl;\n  }\n  get depid(): FormControl {\n    return this.editEmployee.get('depid') as FormControl;\n  }\n  get cnic(): FormControl {\n    return this.editEmployee.get('cnic') as FormControl;\n  }\n  get age(): FormControl {\n    return this.editEmployee.get('age') as FormControl;\n  }\n  get salary(): FormControl {\n    return this.editEmployee.get('salary') as FormControl;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}