{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet EditComponent = class EditComponent {\n  constructor(signinAuth, router, Router) {\n    this.signinAuth = signinAuth;\n    this.router = router;\n    this.Router = Router;\n    this.departments = [];\n    this.addForm = new FormGroup({\n      id: new FormControl('', [Validators.required]),\n      name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(3), Validators.maxLength(14)]),\n      depid: new FormControl('', [Validators.required]),\n      cnic: new FormControl('', [Validators.required, Validators.pattern('[0-9]*'), Validators.minLength(13), Validators.maxLength(13)]),\n      age: new FormControl('', [Validators.required, Validators.min(18), Validators.max(59)]),\n      salary: new FormControl('', [Validators.required, Validators.min(10000), Validators.max(100000)])\n    });\n    this.isUserValid = false;\n  }\n  ngOnInit() {\n    this.signinAuth.getAllDepartments().subscribe(data => {\n      this.departments = data;\n    });\n    const id = this.Router.snapshot.queryParams.id;\n    this.signinAuth.getEmployeebyid(id).subscribe(data => {\n      this.addForm.patchValue({\n        id: data.id,\n        name: data.name,\n        depid: data.depId,\n        cnic: data.cnic,\n        age: data.age,\n        salary: data.salary\n      });\n    });\n  }\n  Submitted() {\n    const employee = {\n      id: parseInt(this.addForm.get('id')?.value || ''),\n      name: this.addForm.get('name')?.value,\n      age: parseInt(this.addForm.get('age')?.value || ''),\n      salary: parseInt(this.addForm.get('salary')?.value || ''),\n      cnic: this.addForm.get('cnic')?.value,\n      depId: parseInt(this.addForm.get('depid')?.value || '')\n    };\n    this.signinAuth.updateEmployee(employee).subscribe(resp => {\n      this.router.navigate(['pages/home']);\n    }, error => {\n      alert('Unsuccessful Age or Salary is incorrect in form!');\n    });\n  }\n  get id() {\n    return this.addForm.get('id');\n  }\n  get name() {\n    return this.addForm.get('name');\n  }\n  get depid() {\n    return this.addForm.get('depid');\n  }\n  get cnic() {\n    return this.addForm.get('cnic');\n  }\n  get age() {\n    return this.addForm.get('age');\n  }\n  get salary() {\n    return this.addForm.get('salary');\n  }\n};\nEditComponent = __decorate([Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})], EditComponent);\nexport { EditComponent };","map":{"version":3,"mappings":"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","names":["Component","FormGroup","FormControl","Validators","EditComponent","constructor","signinAuth","router","Router","id","required","name","pattern","minLength","maxLength","depid","cnic","age","min","max","salary","ngOnInit","getAllDepartments","subscribe","data","departments","snapshot","queryParams","getEmployeebyid","addForm","patchValue","depId","Submitted","employee","parseInt","get","value","updateEmployee","resp","navigate","error","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\edit\\edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { editEmployee} from 'src/app/models/employeeModel';\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css'],\n})\nexport class EditComponent implements OnInit {\n  constructor(\n    private signinAuth: AuthService,\n    private router: Router,\n    private Router: ActivatedRoute\n  ) {}\n  departments: any[] = [];\n  ngOnInit(): void {\n    this.signinAuth.getAllDepartments().subscribe((data: any[]) => {\n      this.departments = data;\n    });    \n    const id = this.Router.snapshot.queryParams.id;\n    this.signinAuth.getEmployeebyid(id).subscribe((data: any) => {\n      this.addForm.patchValue({\n        id: data.id,\n        name: data.name,\n        depid: data.depId,\n        cnic: data.cnic,\n        age: data.age,\n        salary: data.salary,\n      });\n    });\n  }\n  addForm = new FormGroup({\n    id: new FormControl('', [Validators.required]),\n    name: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[a-zA-Z ]*'),\n      Validators.minLength(3),\n      Validators.maxLength(14),\n    ]),\n    depid: new FormControl('', [Validators.required]),\n    cnic: new FormControl('', [\n      Validators.required,\n      Validators.pattern('[0-9]*'),\n      Validators.minLength(13),\n      Validators.maxLength(13),\n    ]),\n    age: new FormControl('', [\n      Validators.required,\n      Validators.min(18),\n      Validators.max(59),\n    ]),\n    salary: new FormControl('', [\n      Validators.required,\n      Validators.min(10000),\n      Validators.max(100000),\n    ]),\n  });\n  isUserValid: boolean = false;\n  Submitted() {\n    const employee: editEmployee = {\n      id: parseInt(this.addForm.get('id')?.value || ''),\n      name: this.addForm.get('name')?.value,\n      age: parseInt(this.addForm.get('age')?.value || ''),\n      salary: parseInt(this.addForm.get('salary')?.value || ''),\n      cnic: this.addForm.get('cnic')?.value,\n      depId: parseInt(this.addForm.get('depid')?.value || ''),\n    };\n    this.signinAuth.updateEmployee(employee).subscribe(\n      (resp) => {\n        this.router.navigate(['pages/home']);\n      },\n      (error) => {\n        alert('Unsuccessful Age or Salary is incorrect in form!');\n      }\n    );\n  }\n  get id(): FormControl {\n    return this.addForm.get('id') as FormControl;\n  }\n  get name(): FormControl {\n    return this.addForm.get('name') as FormControl;\n  }\n  get depid(): FormControl {\n    return this.addForm.get('depid') as FormControl;\n  }\n  get cnic(): FormControl {\n    return this.addForm.get('cnic') as FormControl;\n  }\n  get age(): FormControl {\n    return this.addForm.get('age') as FormControl;\n  }\n  get salary(): FormControl {\n    return this.addForm.get('salary') as FormControl;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}