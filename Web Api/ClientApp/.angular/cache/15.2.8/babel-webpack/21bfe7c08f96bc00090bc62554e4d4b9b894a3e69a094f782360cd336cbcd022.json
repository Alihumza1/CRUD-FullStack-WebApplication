{"ast":null,"code":"import { DataTableDirective } from 'angular-datatables';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"src/app/services/service\";\nimport * as i4 from \"angular-datatables\";\nconst _c0 = function () {\n  return [\"/pages/depadd\"];\n};\nexport class DephomeComponent {\n  constructor(route, http, _router, service) {\n    this.route = route;\n    this.http = http;\n    this._router = _router;\n    this.service = service;\n    this.dtOptions = {};\n  }\n  ngOnInit() {\n    this.fetchData();\n  }\n  fetchData() {\n    this.dtOptions = {\n      processing: true,\n      serverSide: true,\n      paging: true,\n      searching: true,\n      ordering: true,\n      ajax: (dataTablesParameters, callback) => {\n        this.http.post('https://localhost:7149/api/Department', dataTablesParameters).subscribe(Response => {\n          callback({\n            recordsTotal: Response.recordsTotal,\n            recordsFiltered: Response.recordsFiltered,\n            data: Response.data\n          });\n        });\n      },\n      columns: [{\n        title: 'Depid',\n        data: 'depid',\n        visible: fa,\n        orderable: false\n      }, {\n        title: 'Name',\n        data: 'name'\n      }, {\n        title: 'Head Name',\n        data: 'headName'\n      }, {\n        title: 'Location',\n        data: 'location'\n      }, {\n        title: 'Actions',\n        data: null,\n        render: function () {\n          return '<button class = \"btn btn-success edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\n        }\n      }],\n      columnDefs: [{\n        targets: [1],\n        orderable: true,\n        searchable: true\n      }, {\n        targets: [3],\n        orderable: true\n      }, {\n        targets: '_all',\n        orderable: false,\n        searchable: false\n      }],\n      rowCallback: (row, data, index) => {\n        const editButton = row.querySelector('.edit');\n        if (editButton) {\n          editButton.addEventListener('click', () => {\n            this._router.navigate(['pages/depedit'], {\n              queryParams: {\n                depid: data.depid\n              }\n            });\n          });\n        }\n        const deleteButton = row.querySelector('.delete');\n        if (deleteButton) {\n          deleteButton.addEventListener('click', () => {\n            const id = data.depid;\n            const name = data.name;\n            const confirmDelete = confirm('Are you sure you want to delete the Record of ' + name);\n            if (confirmDelete) {\n              this.service.deleteDepartment(id).subscribe(() => {\n                this.dtElement.dtInstance.then(dtInstance => {\n                  dtInstance.ajax.reload();\n                });\n              }, error => {\n                alert('Unsuccessful not deleted');\n              });\n            }\n          });\n        }\n        return row;\n      }\n    };\n  }\n}\nDephomeComponent.ɵfac = function DephomeComponent_Factory(t) {\n  return new (t || DephomeComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.Service));\n};\nDephomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DephomeComponent,\n  selectors: [[\"app-home\"]],\n  viewQuery: function DephomeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(DataTableDirective, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dtElement = _t.first);\n    }\n  },\n  decls: 5,\n  vars: 3,\n  consts: [[1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [\"id\", \"myTable\", \"datatable\", \"\", 1, \"table\", \"table-bordered\", \"shadow-lg\", 3, \"dtOptions\"]],\n  template: function DephomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵtext(1, \"Add Department\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(2, \"br\")(3, \"br\")(4, \"table\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"dtOptions\", ctx.dtOptions);\n    }\n  },\n  dependencies: [i1.RouterLink, i4.DataTableDirective],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["DataTableDirective","DephomeComponent","constructor","route","http","_router","service","ngOnInit","fetchData","dtOptions","processing","serverSide","paging","searching","ordering","ajax","dataTablesParameters","callback","post","subscribe","Response","recordsTotal","recordsFiltered","data","columns","title","visible","fa","orderable","render","columnDefs","targets","searchable","rowCallback","row","index","editButton","querySelector","addEventListener","navigate","queryParams","depid","deleteButton","id","name","confirmDelete","confirm","deleteDepartment","dtElement","dtInstance","then","reload","error","alert","selectors","viewQuery","i0"],"sourceRoot":"","sources":["C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\dephome\\dephome.component.ts","C:\\Users\\Ali Hamza\\source\\repos\\ClassLibrary2\\Web Api\\ClientApp\\src\\app\\pages\\department\\dephome\\dephome.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild} from '@angular/core';\nimport { DataTableDirective } from 'angular-datatables';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Service } from 'src/app/services/service';\n@Component({\n  selector: 'app-home',\n  templateUrl: './dephome.component.html',\n})\nexport class DephomeComponent implements OnInit {\n  @ViewChild(DataTableDirective, { static: false })\n  dtElement!: DataTableDirective;\n  constructor(\n   \n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private _router: Router,\n    private service: Service\n  ) {}\n  dtOptions: DataTables.Settings = {};\n  ngOnInit(): void {\n    this.fetchData();\n  }\n  fetchData() {\n    this.dtOptions = {\n      processing: true,\n      serverSide: true,\n      paging: true,\n      searching: true,\n      ordering: true,\n      ajax: (dataTablesParameters: any, callback) => {\n        this.http\n          .post('https://localhost:7149/api/Department', dataTablesParameters)\n          .subscribe((Response: any) => {\n            callback({\n              recordsTotal: Response.recordsTotal,\n              recordsFiltered: Response.recordsFiltered,\n              data: Response.data,\n            });\n          });\n      },\n      columns: [\n        { title: 'Depid', data: 'depid', visible: fa,orderable:false },\n        { title: 'Name', data: 'name' },\n        { title: 'Head Name', data: 'headName' },\n        { title: 'Location', data: 'location' },\n        {\n          title: 'Actions',\n          data: null,\n          render: function () {\n            return '<button class = \"btn btn-success edit\">Edit</button>       <button class = \"btn btn-danger delete\">Delete</button>';\n          },\n        },\n      ],\n      columnDefs: [\n        {\n          targets: [1],\n          orderable: true,\n          searchable: true,\n        },\n        {\n          targets: [3],\n          orderable: true,\n        },\n        {\n          targets: '_all',\n          orderable: false,\n          searchable: false,\n        },\n      ],\n      rowCallback: (row: Node, data: any, index: number) => {\n        const editButton = (row as HTMLElement).querySelector('.edit');\n        if (editButton) {\n          editButton.addEventListener('click', () => {\n            this._router.navigate(['pages/depedit'], {\n              queryParams: { depid: data.depid },\n            });\n          });\n        }\n        const deleteButton = (row as HTMLElement).querySelector('.delete');\n        if (deleteButton) {\n          deleteButton.addEventListener('click', () => {\n            const id = data.depid;\n            const name = data.name;\n            const confirmDelete = confirm('Are you sure you want to delete the Record of ' + name);\n            if (confirmDelete) {\n              this.service.deleteDepartment(id).subscribe(\n                () => {\n                  this.dtElement.dtInstance.then((dtInstance: DataTables.Api) => {\n                    dtInstance.ajax.reload();\n                  });\n                },\n                (error) => {\n                  alert('Unsuccessful not deleted');\n                }\n              );\n            }\n          });\n        }\n        return row;\n      },\n    };\n  }\n}\n","<button class=\"btn btn-primary\"  [routerLink]=\"['/pages/depadd']\">Add Department</button>\n<br>\n<br>\n<table id=\"myTable\" datatable [dtOptions]=\"dtOptions\"  class=\"table  table-bordered  shadow-lg\"></table>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}