{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction DepeditComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Department Name is required and should only contain alphabets. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepeditComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Department Name should be 2 and as long as 25 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepeditComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", employee_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(employee_r6.name);\n  }\n}\nfunction DepeditComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" HeadName is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepeditComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Cnic number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DepeditComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Location should be 2 and as long as 25 characters long \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/pages/dephome\"];\n};\nexport let DepeditComponent = /*#__PURE__*/(() => {\n  class DepeditComponent {\n    constructor(service, router, Router) {\n      this.service = service;\n      this.router = router;\n      this.Router = Router;\n      this.employees = [];\n      this.editDepartment = new FormGroup({\n        name: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(2), Validators.maxLength(25)]),\n        depid: new FormControl('', [Validators.required]),\n        headname: new FormControl('', [Validators.required]),\n        location: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(2), Validators.maxLength(25)])\n      });\n    }\n    ngOnInit() {\n      this.service.getAllEmployee().subscribe(data => {\n        this.employees = data;\n      });\n      const id = this.Router.snapshot.queryParams.depid;\n      this.service.getDepartmentbyid(id).subscribe(data => {\n        this.editDepartment.patchValue({\n          name: data.name,\n          depid: data.depid,\n          headname: data.headName,\n          location: data.location\n        });\n      });\n    }\n    Submit() {\n      const department = {\n        depId: parseInt(this.editDepartment.get('depid')?.value || ''),\n        name: this.editDepartment.get('name')?.value,\n        headName: this.editDepartment.get('headname')?.value,\n        location: this.editDepartment.get('location')?.value\n      };\n      this.service.updateDepartment(department).subscribe(resp => {\n        this.router.navigate(['pages/dephome']);\n      }, error => {\n        alert('Unsuccessful !');\n      });\n    }\n    get depid() {\n      return this.editDepartment.get('depid');\n    }\n    get name() {\n      return this.editDepartment.get('name');\n    }\n    get headname() {\n      return this.editDepartment.get('headname');\n    }\n    get location() {\n      return this.editDepartment.get('location');\n    }\n  }\n  DepeditComponent.ɵfac = function DepeditComponent_Factory(t) {\n    return new (t || DepeditComponent)(i0.ɵɵdirectiveInject(i1.Service), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  DepeditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DepeditComponent,\n    selectors: [[\"app-edit\"]],\n    decls: 37,\n    vars: 10,\n    consts: [[1, \"container\"], [1, \"mx-auto\", \"border\", \"p-3\", \"bg-light\", \"shadow-lg\", 2, \"width\", \"400px\"], [3, \"formGroup\", \"ngSubmit\"], [\"hidden\", \"\", 1, \"mb-3\"], [\"for\", \"depid\", 1, \"form-label\"], [\"type\", \"number\", \"id\", \"depid\", \"placeholder\", \"Enter your Department id\", \"formControlName\", \"depid\", \"required\", \"\", 1, \"form-control\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Enter your Name\", \"formControlName\", \"name\", \"required\", \"\", 1, \"form-control\"], [\"class\", \"form-text text-danger\", 4, \"ngIf\"], [\"for\", \"headname\", 1, \"form-label\"], [\"id\", \"headname\", \"formControlName\", \"headname\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"location\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"location\", \"placeholder\", \"Enter your Location\", \"formControlName\", \"location\", \"required\", \"\", 1, \"form-control\"], [1, \"btn-group\", \"d-flex\", \"justify-content-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"btn\", \"btn-primary\", 3, \"routerLink\"], [1, \"form-text\", \"text-danger\"], [3, \"value\"]],\n    template: function DepeditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\")(3, \"b\");\n        i0.ɵɵtext(4, \"Edit\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function DepeditComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.Submit();\n        });\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Department ID :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Department Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 8);\n        i0.ɵɵtemplate(14, DepeditComponent_div_14_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(15, DepeditComponent_div_15_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 6)(17, \"label\", 10);\n        i0.ɵɵtext(18, \"Manager:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"select\", 11)(20, \"option\", 12);\n        i0.ɵɵtext(21, \"Select HeadName\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, DepeditComponent_option_22_Template, 2, 2, \"option\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, DepeditComponent_div_23_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 6)(25, \"label\", 14);\n        i0.ɵɵtext(26, \"Location:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 15);\n        i0.ɵɵtemplate(28, DepeditComponent_div_28_Template, 2, 0, \"div\", 9);\n        i0.ɵɵtemplate(29, DepeditComponent_div_29_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"br\");\n        i0.ɵɵelementStart(31, \"div\", 16)(32, \"button\", 17);\n        i0.ɵɵtext(33, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(34, \" \\u00A0 \\u00A0 \");\n        i0.ɵɵelementStart(35, \"button\", 18);\n        i0.ɵɵtext(36, \"Cancel\");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.editDepartment);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", (ctx.name.touched || ctx.name.dirty) && ((ctx.name.errors == null ? null : ctx.name.errors.required) || (ctx.name.errors == null ? null : ctx.name.errors.pattern)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.name.errors == null ? null : ctx.name.errors[\"minlength\"]) || (ctx.name.errors == null ? null : ctx.name.errors[\"maxlength\"]) && (ctx.name.dirty || ctx.name.touched));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.headname.errors == null ? null : ctx.headname.errors.required) && (ctx.headname.dirty || ctx.headname.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (ctx.location.touched || ctx.location.dirty) && ((ctx.location.errors == null ? null : ctx.location.errors.required) || (ctx.location.errors == null ? null : ctx.location.errors.pattern)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.location.errors == null ? null : ctx.location.errors[\"minlength\"]) || (ctx.location.errors == null ? null : ctx.location.errors[\"maxlength\"]) && (ctx.location.dirty || ctx.location.touched));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.editDepartment.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c0));\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i2.RouterLink, i4.NgForOf, i4.NgIf]\n  });\n  return DepeditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}